"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[2112],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return d}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),u=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},c=function(e){var n=u(e.components);return t.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,v=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return r?t.createElement(v,s(s({ref:n},c),{},{components:r})):t.createElement(v,s({ref:n},c))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5782:function(e,n,r){r.r(n),r.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return u}});var t=r(3117),a=(r(7294),r(3905));const o={sidebar_label:"Configurer l'Environnement du R\xe9seau"},s="Configurer votre environnement pour CosmWasm sur Celestia",i={unversionedId:"developers/cosmwasm-environment",id:"developers/cosmwasm-environment",title:"Configurer votre environnement pour CosmWasm sur Celestia",description:"Maintenant que le binaire wasmd est construit, nous devons configurer un r\xe9seau local qui communique entre wasmd et Rollmint.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developers/cosmwasm-environment.md",sourceDirName:"developers",slug:"/developers/cosmwasm-environment",permalink:"/fr/developers/cosmwasm-environment",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/cosmwasm-environment.md",tags:[],version:"current",frontMatter:{sidebar_label:"Configurer l'Environnement du R\xe9seau"},sidebar:"developers",previous:{title:"Les D\xe9pendances CosmWasm",permalink:"/fr/developers/cosmwasm-dependency"},next:{title:"D\xe9ploiement de contrat",permalink:"/fr/developers/cosmwasm-contract-deployment"}},l={},u=[{value:"Construire le r\xe9seau Wasmd",id:"construire-le-r\xe9seau-wasmd",level:2},{value:"Lancer le r\xe9seau Wasmd",id:"lancer-le-r\xe9seau-wasmd",level:2}],c={toc:u};function m(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configurer-votre-environnement-pour-cosmwasm-sur-celestia"},"Configurer votre environnement pour CosmWasm sur Celestia"),(0,a.kt)("p",null,"Maintenant que le binaire ",(0,a.kt)("inlineCode",{parentName:"p"},"wasmd")," est construit, nous devons configurer un r\xe9seau local qui communique entre ",(0,a.kt)("inlineCode",{parentName:"p"},"wasmd")," et Rollmint."),(0,a.kt)("h2",{id:"construire-le-r\xe9seau-wasmd"},"Construire le r\xe9seau Wasmd"),(0,a.kt)("p",null,"Ex\xe9cuter la commande suivante :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"VALIDATOR_NAME=validator1\nCHAIN_ID=celeswasm\nwasmd init $VALIDATOR_NAME --chain-id $CHAIN_ID\n")),(0,a.kt)("p",null,"Cela initialise une chaine appel\xe9e ",(0,a.kt)("inlineCode",{parentName:"p"},"celeswasm")," avec le fichier binaire ",(0,a.kt)("inlineCode",{parentName:"p"},"wasmd"),"."),(0,a.kt)("p",null,"La commande suivante nous aide \xe0 configurer des comptes pour le genesis :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"KEY_NAME=celeswasm-key\nwasmd keys add $KEY_NAME --keyring-backend test\n")),(0,a.kt)("p",null,"Assurez-vous de stocker la sortie du wallet g\xe9n\xe9r\xe9 pour un usage ult\xe9rieur si besoin."),(0,a.kt)("p",null,"Maintenant, ajoutons un compte genesis et utilisons-le pour mettre \xe0 jour notre fichier genesis:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'TOKEN_AMOUNT="10000000000000000000000000uwasm"\nwasmd add-genesis-account $KEY_NAME $TOKEN_AMOUNT --keyring-backend test\nSTAKING_AMOUNT=1000000000uwasm\nwasmd gentx $KEY_NAME $STAKING_AMOUNT --chain-id $CHAIN_ID --keyring-backend test\n')),(0,a.kt)("p",null,"Gr\xe2ce \xe0 cela, nous avons cr\xe9\xe9 un fichier genesis sur le r\xe9seau local."),(0,a.kt)("p",null,"D'autres commandes encore plus utiles que nous pouvons configurer :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'export NODE="--chain-id ${CHAIN_ID}"\nexport TXFLAG="--chain-id ${CHAIN_ID} --gas-prices 0uwasm --gas auto --gas-adjustment 1.3"\n')),(0,a.kt)("h2",{id:"lancer-le-r\xe9seau-wasmd"},"Lancer le r\xe9seau Wasmd"),(0,a.kt)("p",null,"Nous pouvons ex\xe9cuter la commande suivante pour lancer le r\xe9seau ",(0,a.kt)("inlineCode",{parentName:"p"},"wasmd")," :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'wasmd start --rollmint.aggregator true --rollmint.da_layer celestia --rollmint.da_config=\'{"base_url":"http://XXX.XXX.XXX.XXX:26659","timeout":60000000000,"gas_limit":6000000}\' --rollmint.namespace_id 000000000000FFFF --rollmint.da_start_height XXXXX\n')),(0,a.kt)("p",null,"Remarques:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"NOTE : Dans la commande du dessus, vous avez besoin de fournir une adresse IP d'un node Celestia poss\xe9dant des Tokens du Devnet Arabica \xe0 ",(0,a.kt)("inlineCode",{parentName:"p"},"base_url"),". Suivre le tutoriel pour configurer un light node Celestia et cr\xe9er un wallet avec les tokens faucet du testnet dans la section n\u0153ud Celestia ",(0,a.kt)("a",{parentName:"p",href:"/fr/developers/node-tutorial"},"ici"),".")),(0,a.kt)("p",null,"Remarques compl\xe9mentaires :"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"IMPORTANT : Egalement dans la commande d'au dessus, vous avez besoin de sp\xe9cifier la derni\xe8re position du bloc dans le devnet Arabica par ",(0,a.kt)("inlineCode",{parentName:"p"},"da_height"),". Vous pouvez trouver le num\xe9ro du dernier bloc dans l'explorateur ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.celestia.observer/arabica"},"ici"),". Aussi, pour le drapeau ",(0,a.kt)("inlineCode",{parentName:"p"},"--rollmint.namespace_id"),", vous pouvez g\xe9n\xe9rer un NamespaceID en utilisant l'environnement de test ",(0,a.kt)("a",{parentName:"p",href:"https://go.dev/play/p/7ltvaj8lhRl"},"ici"))),(0,a.kt)("p",null,"Gr\xe2ce \xe0 cet article, nous avons d\xe9marr\xe9 notre r\xe9seau ",(0,a.kt)("inlineCode",{parentName:"p"},"wasmd")," !"))}m.isMDXComponent=!0}}]);