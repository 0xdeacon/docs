"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[289],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(t),m=l,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return t?a.createElement(g,r(r({ref:n},u),{},{components:t})):a.createElement(g,r({ref:n},u))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var c=2;c<i;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:function(e,n,t){t.d(n,{Z:function(){return r}});var a=t(7294),l=t(4334),i="tabItem_Ymn6";function r(e){let{children:n,hidden:t,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:t},n)}},5488:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(3117),l=t(7294),i=t(4334),r=t(2389),o=t(7392),s=t(7094),c=t(2466),u="tabList__CuJ",d="tabItem_LNqP";function p(e){var n;const{lazy:t,block:r,defaultValue:p,values:m,groupId:g,className:k}=e,v=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??v.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),h=(0,o.l)(b,((e,n)=>e.value===n.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===p?p:p??(null==(n=v.find((e=>e.props.default)))?void 0:n.props.value)??v[0].props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:y}=(0,s.U)(),[T,C]=(0,l.useState)(f),w=[],{blockElementScrollPositionUntilNextRender:I}=(0,c.o5)();if(null!=g){const e=N[g];null!=e&&e!==T&&b.some((n=>n.value===e))&&C(e)}const E=e=>{const n=e.currentTarget,t=w.indexOf(n),a=b[t].value;a!==T&&(I(n),C(a),null!=g&&y(g,String(a)))},O=e=>{var n;let t=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]??w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]??w[w.length-1];break}}null==(n=t)||n.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},k)},b.map((e=>{let{value:n,label:t,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:e=>w.push(e),onKeyDown:O,onClick:E},r,{className:(0,i.Z)("tabs__item",d,null==r?void 0:r.className,{"tabs__item--active":T===n})}),t??n)}))),t?(0,l.cloneElement)(v.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==T})))))}function m(e){const n=(0,r.Z)();return l.createElement(p,(0,a.Z)({key:String(n)},e))}},1027:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var a=t(3117),l=(t(7294),t(3905)),i=t(5488),r=t(5162);const o={sidebar_label:"Installer Celestia Node"},s="Node Celestia",c={unversionedId:"developers/celestia-node",id:"developers/celestia-node",title:"Node Celestia",description:"Ce tutoriel passe en revue la construction et l'installation d'un n\u0153ud Celestia. Ce tutoriel suppose que vous avez termin\xe9 les \xe9tapes de configuration de votre propre environnement de d\xe9veloppement ici.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developers/celestia-node.mdx",sourceDirName:"developers",slug:"/developers/celestia-node",permalink:"/fr/developers/celestia-node",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/celestia-node.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Installer Celestia Node"},sidebar:"developers",previous:{title:"Celestia Node",permalink:"/fr/category/celestia-node"},next:{title:"Node Tutorial",permalink:"/fr/developers/node-tutorial"}},u={},d=[{value:"Installer un node Celestia",id:"installer-un-node-celestia",level:2},{value:"S\xe9lection du r\xe9seau",id:"s\xe9lection-du-r\xe9seau",level:2},{value:"Errors",id:"errors",level:3},{value:"Errors",id:"errors-1",level:3}],p={toc:d};function m(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"node-celestia"},"Node Celestia"),(0,l.kt)("p",null,"Ce tutoriel passe en revue la construction et l'installation d'un n\u0153ud Celestia. Ce tutoriel suppose que vous avez termin\xe9 les \xe9tapes de configuration de votre propre environnement de d\xe9veloppement ",(0,l.kt)("a",{parentName:"p",href:"/fr/developers/environment"},"ici"),"."),(0,l.kt)("h2",{id:"installer-un-node-celestia"},"Installer un node Celestia"),(0,l.kt)(i.Z,{groupId:"network",mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"arabica",label:"Arabica",mdxType:"TabItem"},(0,l.kt)(i.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"amd",label:"Ubuntu (AMD)",mdxType:"TabItem"},(0,l.kt)("p",null,"Installer ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," sur le devnet Arabica signifie en installer une version compatible sp\xe9cifique \xe0 ce r\xe9seau."),(0,l.kt)("p",null,"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," binary by running the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\ngit checkout tags/v0.5.0-rc5\nmake install\nmake cel-key\n")),(0,l.kt)("p",null,"Verify that the binary is working and check the version with the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia\nversion")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-output"},"celestia version\nSemantic version: v0.5.0-rc5\nCommit: 039facd94104c741f8fa995e80f1321776ae4ad3\nBuild Date: Tue Nov 15 16:23:30 EST 2022\nSystem version: amd64/linux\nGolang version: go1.19.1\n"))),(0,l.kt)(r.Z,{value:"arm",label:"Ubuntu (ARM)",mdxType:"TabItem"},(0,l.kt)("p",null,"Installer ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," sur le devnet Arabica signifie en installer une version compatible sp\xe9cifique \xe0 ce r\xe9seau."),(0,l.kt)("p",null,"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," binary by running the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\ngit checkout tags/v0.5.0-rc5\nmake install\nmake cel-key\n")),(0,l.kt)("p",null,"Verify that the binary is working and check the version with the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia\nversion")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-output"},"celestia version\nSemantic version: v0.5.0-rc5\nCommit: 039facd94104c741f8fa995e80f1321776ae4ad3\nBuild Date: Tue Nov 15 16:23:30 EST 2022\nSystem version: arm64/linux\nGolang version: go1.19.1\n"))),(0,l.kt)(r.Z,{value:"apple",label:"Mac (Apple)",mdxType:"TabItem"},(0,l.kt)("p",null,"Installer ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," sur le devnet Arabica signifie en installer une version compatible sp\xe9cifique \xe0 ce r\xe9seau."),(0,l.kt)("p",null,"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," binary by running the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\ngit checkout tags/v0.5.0-rc5\nmake go-install\nmake cel-key\n")),(0,l.kt)("p",null,"Verify that the binary is working and check the version with the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia\nversion")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-output"},"celestia version\nSemantic version: v0.5.0-rc5\nCommit: 039facd94104c741f8fa995e80f1321776ae4ad3\nBuild Date: Tue Nov 15 16:23:30 EST 2022\nSystem version: arm64/darwin\nGolang version: go1.19.1\n"))),(0,l.kt)(r.Z,{value:"mac",label:"Mac (Intel)",mdxType:"TabItem"},(0,l.kt)("p",null,"Installer ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," sur le devnet Arabica signifie en installer une version compatible sp\xe9cifique \xe0 ce r\xe9seau."),(0,l.kt)("p",null,"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," binary by running the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\ngit checkout tags/v0.5.0-rc5\nmake go-install\nmake cel-key\n")),(0,l.kt)("p",null,"Verify that the binary is working and check the version with the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia\nversion")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-output"},"celestia version\nSemantic version: v0.5.0-rc5\nCommit: 039facd94104c741f8fa995e80f1321776ae4ad3\nBuild Date: Tue Nov 15 16:23:30 EST 2022\nSystem version: amd64/darwin\nGolang version: go1.19.1\n"))))),(0,l.kt)(r.Z,{value:"mamaki",label:"Mamaki",mdxType:"TabItem"},(0,l.kt)(i.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"amd",label:"Ubuntu (AMD)",mdxType:"TabItem"},(0,l.kt)("p",null,"Installer ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," sur le Testnet Mamaki signifie installer une version sp\xe9cifique compatible avec le r\xe9seau."),(0,l.kt)("p",null,"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," binary by running the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\ngit checkout tags/v0.3.0-rc2\nmake install\nmake cel-key\n")),(0,l.kt)("p",null,"Verify that the binary is working and check the version with the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia\nversion")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"$ celestia version\nSemantic version: v0.3.0-rc2\nCommit: 89892d8b96660e334741987d84546c36f0996fbe\n"))),(0,l.kt)(r.Z,{value:"arm",label:"Ubuntu (ARM)",mdxType:"TabItem"},(0,l.kt)("p",null,"Installer ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," sur le Testnet Mamaki signifie installer une version sp\xe9cifique compatible avec le r\xe9seau."),(0,l.kt)("p",null,"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," binary by running the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\ngit checkout tags/v0.3.0-rc2\nmake install\nmake cel-key\n")),(0,l.kt)("p",null,"Verify that the binary is working and check the version with the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia\nversion")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"$ celestia version\nSemantic version: v0.3.0-rc2\nCommit: 89892d8b96660e334741987d84546c36f0996fbe\n"))),(0,l.kt)(r.Z,{value:"apple",label:"Mac (Apple)",mdxType:"TabItem"},(0,l.kt)("p",null,"Installer ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," sur le Testnet Mamaki signifie installer une version sp\xe9cifique compatible avec le r\xe9seau."),(0,l.kt)("p",null,"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," binary by running the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\ngit checkout tags/v0.3.0-rc2\nmake install\nmake cel-key\n")),(0,l.kt)("p",null,"Verify that the binary is working and check the version with the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia\nversion")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"$ celestia version\nSemantic version: v0.3.0-rc2\nCommit: 89892d8b96660e334741987d84546c36f0996fbe\n"))),(0,l.kt)(r.Z,{value:"mac",label:"Mac (Intel)",mdxType:"TabItem"},(0,l.kt)("p",null,"Installer ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," sur le Testnet Mamaki signifie installer une version sp\xe9cifique compatible avec le r\xe9seau."),(0,l.kt)("p",null,"Install the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," binary by running the following commands:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf celestia-node\ngit clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\ngit checkout tags/v0.3.0-rc2\nmake install\nmake cel-key\n")),(0,l.kt)("p",null,"Verify that the binary is working and check the version with the ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia\nversion")," command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"$ celestia version\nSemantic version: v0.3.0-rc2\nCommit: 89892d8b96660e334741987d84546c36f0996fbe\n")))))),(0,l.kt)("h2",{id:"s\xe9lection-du-r\xe9seau"},"S\xe9lection du r\xe9seau"),(0,l.kt)(i.Z,{groupId:"network",mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"arabica",label:"Arabica",mdxType:"TabItem"},(0,l.kt)("p",null,"Vous pouvez choisir le r\xe9seau de ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," entre Arabica et Mamaki. Cependant, vous noterez que les r\xe9seaux fonctionnent mieux sur les versions de ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node")," mentionn\xe9es ci-dessus."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light init --p2p.network arabica-2\ncelestia light start --p2p.network arabica-2\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"NOTE: Il est conseill\xe9 de r\xe9initialiser votre node avant de changer de r\xe9seau via la commande ",(0,l.kt)("inlineCode",{parentName:"p"},"init"),". Ceci est d\xfb \xe0 la pr\xe9sence d'une ancienne configuration.\nLa r\xe9initialisation r\xe9initialisera la configuration.")),(0,l.kt)("h3",{id:"errors"},"Errors"),(0,l.kt)("p",null,"Si vous rencontrez une erreur, c'est probablement parce qu'une ancienne configuration est pr\xe9sente:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"Error: nodebuilder/share: interval must be positive; nodebuilder/core: invalid IP addr given:\n\n# ou\n\nError: nodebuilder/share: interval must be positive\n")),(0,l.kt)("p",null,"You can re-initialize your node with the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"rm -rf ~./celestia-light-arabica-1 && celestia light init\n")),(0,l.kt)("p",null,"Votre sortie devrait \xeatre simialaire \xe0:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'@ ~ % rm -rf ./celestia-light-arabica-1 && celestia light init\n2022-11-01T22:23:19.581+0100    INFO    node    nodebuilder/init.go:20  Initializing Light Node Store over \'/Users/joshstein/.celestia-light-arabica-1\'\n2022-11-01T22:23:19.582+0100    INFO    node    nodebuilder/init.go:51  Saving config   {"path": "/Users/joshstein/.celestia-light-arabica-1/config.toml"}\n2022-11-01T22:23:19.582+0100    INFO    node    nodebuilder/init.go:52  Node Store initialized\n')),(0,l.kt)("p",null,"Ensuite, d\xe9marrez votre node:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --node.network arabica-1\n"))),(0,l.kt)(r.Z,{value:"mamaki",label:"Mamaki",mdxType:"TabItem"},(0,l.kt)("p",null,"La s\xe9lection de r\xe9seau sur la v0.3.0-rc2 n'est pas disponible."),(0,l.kt)("h3",{id:"errors-1"},"Errors"),(0,l.kt)("p",null,"Si vous rencontrez une erreur, c'est probablement parce qu'une ancienne configuration est pr\xe9sente:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"Error: nodebuilder/share: interval must be positive; nodebuilder/core: invalid IP addr given:\n\n# or\n\nError: nodebuilder/share: interval must be positive\n")),(0,l.kt)("p",null,"You can re-initialize your node with the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"rm -rf ~./celestia-light && celestia light init\n")),(0,l.kt)("p",null,"Votre sortie devrait \xeatre simialaire \xe0:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'@ ~ % rm -rf ./celestia-light-arabica-1 && celestia light init\n2022-11-01T22:23:19.581+0100    INFO    node    nodebuilder/init.go:20  Initializing Light Node Store over \'/Users/joshstein/.celestia-light\'\n2022-11-01T22:23:19.582+0100    INFO    node    nodebuilder/init.go:51  Saving config   {"path": "/Users/joshstein/.celestia-light/config.toml"}\n2022-11-01T22:23:19.582+0100    INFO    node    nodebuilder/init.go:52  Node Store initialized\n')),(0,l.kt)("p",null,"Ensuite, d\xe9marrez votre node:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start\n")))))}m.isMDXComponent=!0}}]);