"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[2766],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3027:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return s}});var n=r(3117),o=(r(7294),r(3905));const a={sidebar_label:"Recipe Book Overview"},i="\ud83e\udd57 Recipe Book Overview",l={unversionedId:"developers/recipe-book",id:"developers/recipe-book",title:"\ud83e\udd57 Recipe Book Overview",description:"\ud83d\udcd6 Vue d'ensemble",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developers/recipe-book.mdx",sourceDirName:"developers",slug:"/developers/recipe-book",permalink:"/fr/developers/recipe-book",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/recipe-book.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Recipe Book Overview"},sidebar:"developers",previous:{title:"Recipe Book",permalink:"/fr/category/recipe-book"},next:{title:"Scaffold your Rollup",permalink:"/fr/developers/recipe-scaffold"}},c={},s=[{value:"\ud83d\udcd6 Vue d&#39;ensemble",id:"-vue-densemble",level:2},{value:"\ud83d\udcbb Prerequisites",id:"-prerequisites",level:2},{value:"\ud83e\uddf1 Table of Contents",id:"-table-of-contents",level:2}],p={toc:s};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-recipe-book-overview"},"\ud83e\udd57 Recipe Book Overview"),(0,o.kt)("h2",{id:"-vue-densemble"},"\ud83d\udcd6 Vue d'ensemble"),(0,o.kt)("p",null,"Dans ce tutoriel, nous allons construire une blockchain pour vos recettes pr\xe9f\xe9r\xe9es. The goal of this tutorial is to create a Rollmint rollup with a module that allows you to write and read data to and from your application-specific blockchain. The end user will be able to submit new recipes and read them from the blockchain."),(0,o.kt)("p",null,"In the ",(0,o.kt)("a",{parentName:"p",href:"./gm-world"},(0,o.kt)("inlineCode",{parentName:"a"},"gm world")," tutorial"),", we defined a new API endpoint and modified a keeper query function to return static data. In this tutorial, we will be modifying the state with transactions (Cosmos SDK messages) that are routed to a module and its message handlers, which are sent to the ",(0,o.kt)("inlineCode",{parentName:"p"},"recipes")," blockchain."),(0,o.kt)("h2",{id:"-prerequisites"},"\ud83d\udcbb Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/gm-world"},"gm world Tutorial")," (recommended)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/environment#install-golang"},"Install Golang")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/celestia-node"},"Install Celestia Node")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./gm-setup#install-ignite-cli"},"Install Ignite CLI"))),(0,o.kt)("h2",{id:"-table-of-contents"},"\ud83e\uddf1 Table of Contents"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/recipe-scaffold"},"Scaffolding your Rollup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/recipe-message"},"Messages")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/recipe-keeper"},"Keepers")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/recipe-query"},"Querying Recipes"))))}u.isMDXComponent=!0}}]);