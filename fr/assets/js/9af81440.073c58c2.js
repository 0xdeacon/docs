"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[3808],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=s(n),g=l,m=c["".concat(u,".").concat(g)]||c[g]||d[g]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=c;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8836:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return s}});var r=n(3117),l=(n(7294),n(3905));const a={sidebar_label:"Cl\xe9s"},o="Prise en main de l'utilitaire Cel-Key",i={unversionedId:"nodes/keys",id:"nodes/keys",title:"Prise en main de l'utilitaire Cel-Key",description:"\xc0 l'int\xe9rieur du r\xe9pertoire celestia-node se trouve un utilitaire appel\xe9 cel-key tqui utilise l'utilitaire cl\xe9 fourni par le Cosmos-SDK sous le capot. L'utilitaire peut \xeatre pour add(ajouter), delete(effacer) , et g\xe9rer les cl\xe9s pour tout type de node de Disponilit\xe9 de la donn\xe9e (bridge || full || light), ou juste des cl\xe9s en g\xe9n\xe9ral.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/nodes/keys.md",sourceDirName:"nodes",slug:"/nodes/keys",permalink:"/fr/nodes/keys",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/nodes/keys.md",tags:[],version:"current",frontMatter:{sidebar_label:"Cl\xe9s"},sidebar:"nodes",previous:{title:"SystemD",permalink:"/fr/nodes/systemd"},next:{title:"Documentation Devops",permalink:"/fr/nodes/devops-resources"}},u={},s=[{value:"Installation",id:"installation",level:2},{value:"\xc9tapes pour g\xe9n\xe9rer une cl\xe9 de <strong>bridge</strong> node",id:"\xe9tapes-pour-g\xe9n\xe9rer-une-cl\xe9-de-bridge-node",level:2},{value:"\xc9tapes pour g\xe9n\xe9rer une cl\xe9 de <strong>full</strong> node",id:"\xe9tapes-pour-g\xe9n\xe9rer-une-cl\xe9-de-full-node",level:2},{value:"\xc9tapes pour g\xe9n\xe9rer une cl\xe9 de <strong>light</strong> node",id:"\xe9tapes-pour-g\xe9n\xe9rer-une-cl\xe9-de-light-node",level:2},{value:"\xc9tapes pour g\xe9n\xe9rer des cl\xe9s de <strong>light</strong> node",id:"\xe9tapes-pour-g\xe9n\xe9rer-des-cl\xe9s-de-light-node",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"prise-en-main-de-lutilitaire-cel-key"},"Prise en main de l'utilitaire Cel-Key"),(0,l.kt)("p",null,"\xc0 l'int\xe9rieur du r\xe9pertoire celestia-node se trouve un utilitaire appel\xe9 ",(0,l.kt)("inlineCode",{parentName:"p"},"cel-key")," tqui utilise l'utilitaire cl\xe9 fourni par le Cosmos-SDK sous le capot. L'utilitaire peut \xeatre pour ",(0,l.kt)("inlineCode",{parentName:"p"},"add"),"(ajouter), ",(0,l.kt)("inlineCode",{parentName:"p"},"delete"),"(effacer) , et g\xe9rer les cl\xe9s pour tout type de node de Disponilit\xe9 de la donn\xe9e ",(0,l.kt)("inlineCode",{parentName:"p"},"(bridge || full || light)"),", ou juste des cl\xe9s en g\xe9n\xe9ral."),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,'Vous devez d\'abord "pull down" le d\xe9p\xf4t ',(0,l.kt)("inlineCode",{parentName:"p"},"celestia-node"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/celestiaorg/celestia-node.git\ncd celestia-node/\n")),(0,l.kt)("p",null,"Il peut \xeatre construit en utilisant l'une des commandes suivantes :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# dumps binary in current working directory, accessible via `./cel-key`\nmake cel-key\n")),(0,l.kt)("p",null,"ou"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# installs binary in GOBIN path, accessible via `cel-key`\nmake install-key\n")),(0,l.kt)("p",null,"Dans le cadre de ce guide, nous utiliserons la commande ",(0,l.kt)("inlineCode",{parentName:"p"},"make cel-key"),"."),(0,l.kt)("h2",{id:"\xe9tapes-pour-g\xe9n\xe9rer-une-cl\xe9-de-bridge-node"},"\xc9tapes pour g\xe9n\xe9rer une cl\xe9 de ",(0,l.kt)("strong",{parentName:"h2"},"bridge")," node"),(0,l.kt)("p",null,"Pour g\xe9n\xe9rer une cl\xe9 pour un bridge node, proc\xe9dez comme ce qui suit :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./cel-key add <key_name> --keyring-backend test --node.type bridge\n")),(0,l.kt)("p",null,"Cela chargera la cl\xe9 <key_name> dans le r\xe9pertoire du Bridge node."),(0,l.kt)("h2",{id:"\xe9tapes-pour-g\xe9n\xe9rer-une-cl\xe9-de-full-node"},"\xc9tapes pour g\xe9n\xe9rer une cl\xe9 de ",(0,l.kt)("strong",{parentName:"h2"},"full")," node"),(0,l.kt)("p",null,"Pour g\xe9n\xe9rer une cl\xe9 pour un full node Celestia, proc\xe9dez comme suit :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./cel-key add <key_name> --keyring-backend test --node.type full\n")),(0,l.kt)("p",null,"Cela chargera la cl\xe9 <key_name> dans le r\xe9pertoire du full node."),(0,l.kt)("h2",{id:"\xe9tapes-pour-g\xe9n\xe9rer-une-cl\xe9-de-light-node"},"\xc9tapes pour g\xe9n\xe9rer une cl\xe9 de ",(0,l.kt)("strong",{parentName:"h2"},"light")," node"),(0,l.kt)("p",null,"Pour g\xe9n\xe9rer une cl\xe9 pour un light node Celestia, proc\xe9dez comme il suit :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./cel-key add <key_name> --keyring-backend test --node.type light\n")),(0,l.kt)("p",null,"Cela chargera la cl\xe9 <key_name> dans le r\xe9pertoire du light node."),(0,l.kt)("h2",{id:"\xe9tapes-pour-g\xe9n\xe9rer-des-cl\xe9s-de-light-node"},"\xc9tapes pour g\xe9n\xe9rer des cl\xe9s de ",(0,l.kt)("strong",{parentName:"h2"},"light")," node"),(0,l.kt)("p",null,"Vous pouvez exporter une cl\xe9 priv\xe9e \xe0 partir du trousseau local au format crypt\xe9 et ASCII-armored."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./cel-key export <key-name> --keyring-backend test --node.type light\n")),(0,l.kt)("p",null,"Vous pouvez ensuite importer votre cl\xe9 avec ",(0,l.kt)("inlineCode",{parentName:"p"},"celestia-appd"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"celestia-appd keys import <new-key-name> <key-file-location>\n")))}d.isMDXComponent=!0}}]);