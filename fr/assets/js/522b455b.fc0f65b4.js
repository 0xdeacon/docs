"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[6314],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),i=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),m=r,v=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(v,s(s({ref:t},u),{},{components:n})):a.createElement(v,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var i=2;i<o;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7943:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return i}});var a=n(3117),r=(n(7294),n(3905));const o={sidebar_label:"Interaction de Contrat"},s="Interaction de contrat avec Celestia sur CosmWasm",c={unversionedId:"developers/cosmwasm-contract-interaction",id:"developers/cosmwasm-contract-interaction",title:"Interaction de contrat avec Celestia sur CosmWasm",description:"Dans les \xe9tapes pr\xe9c\xe9dentes, nous avons stock\xe9 le hash de la transaction du contrat dans un environnement variable pour un usage ult\xe9rieur.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developers/cosmwasm-contract-interaction.md",sourceDirName:"developers",slug:"/developers/cosmwasm-contract-interaction",permalink:"/fr/developers/cosmwasm-contract-interaction",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/cosmwasm-contract-interaction.md",tags:[],version:"current",frontMatter:{sidebar_label:"Interaction de Contrat"},sidebar:"developers",previous:{title:"D\xe9ploiement de contrat",permalink:"/fr/developers/cosmwasm-contract-deployment"},next:{title:"Ressources CosmWasm",permalink:"/fr/developers/cosmwasm-resources"}},l={},i=[{value:"Interrogation du contrat",id:"interrogation-du-contrat",level:2},{value:"Instanciation du contrat",id:"instanciation-du-contrat",level:2},{value:"Interaction avec le contrat",id:"interaction-avec-le-contrat",level:2}],u={toc:i};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interaction-de-contrat-avec-celestia-sur-cosmwasm"},"Interaction de contrat avec Celestia sur CosmWasm"),(0,r.kt)("p",null,"Dans les \xe9tapes pr\xe9c\xe9dentes, nous avons stock\xe9 le hash de la transaction du contrat dans un environnement variable pour un usage ult\xe9rieur."),(0,r.kt)("p",null,"\xc0 cause des p\xe9riodes plus longues de soumission des transactions via Rollmint en raison de l'attente de la couche de disponibilit\xe9 des donn\xe9es de Celestia pour confirmer l'inclusion du bloc, nous devrons interroger directement notre hachage tx pour obtenir des informations \xe0 ce sujet."),(0,r.kt)("h2",{id:"interrogation-du-contrat"},"Interrogation du contrat"),(0,r.kt)("p",null,"Commen\xe7ons par questionner notre hash de transaction pour son code d'identification:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"CODE_ID=$(wasmd query tx --type=hash $TX_HASH $CHAINFLAG $NODEIP --output json | jq -r '.logs[0].events[-1].attributes[0].value')\necho $CODE_ID\n")),(0,r.kt)("p",null,"Cela va nous retourner le code d'identification du contrat d\xe9ploy\xe9."),(0,r.kt)("p",null,"Dans notre cas, puisque c'est le premier contrat d\xe9ploy\xe9 sur notre r\xe9seau local, la valeur est ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,r.kt)("p",null,"Maintenant, nous pouvons jeter un \u0153il aux contrats g\xe9n\xe9r\xe9s par ce code d'identification\xa0:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"wasmd query wasm list-contract-by-code $CODE_ID $CHAINFLAG $NODEIP --output json\n")),(0,r.kt)("p",null,"Nous obtenons le r\xe9sultat suivant :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{"contracts":[],"pagination":{"next_key":null,"total":"0"}}\n')),(0,r.kt)("h2",{id:"instanciation-du-contrat"},"Instanciation du contrat"),(0,r.kt)("p",null,"Nous commen\xe7ons \xe0 instancier le contrat en \xe9crivant le message ",(0,r.kt)("inlineCode",{parentName:"p"},"INIT")," pour le contrat nameservice. Ici nous sp\xe9cifions que le ",(0,r.kt)("inlineCode",{parentName:"p"},"purchase_price")," (prix d'achat) d'un nom est de ",(0,r.kt)("inlineCode",{parentName:"p"},"100uwasm")," et que le ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer_price")," (prix de transfert) est de ",(0,r.kt)("inlineCode",{parentName:"p"},"999uwasm"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'INIT=\'{"purchase_price":{"amount":"100","denom":"uwasm"},"transfer_price":{"amount":"999","denom":"uwasm"}}\'\nwasmd tx wasm instantiate $CODE_ID "$INIT" --from $KEY_NAME --keyring-backend test --label "name service" $TXFLAG -y --no-admin $NODEIP\n')),(0,r.kt)("h2",{id:"interaction-avec-le-contrat"},"Interaction avec le contrat"),(0,r.kt)("p",null,"Maintenant que nous l'avons instanci\xe9, nous pouvons interagir davantage avec le contrat :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"wasmd query wasm list-contract-by-code $CODE_ID $CHAINFLAG --output json $NODEIP\nCONTRACT=$(wasmd query wasm list-contract-by-code $CODE_ID $CHAINFLAG --output json $NODEIP | jq -r '.contracts[-1]')\necho $CONTRACT\n\nwasmd query wasm contract $NODEIP $CONTRACT $CHAINFLAG\nwasmd query bank balances $NODEIP $CONTRACT $CHAINFLAG\n")),(0,r.kt)("p",null,"Cela nous permet de voir l'adresse du contrat, les d\xe9tails de celui-ci et des soldes bancaires."),(0,r.kt)("p",null,"Your output will look similar to below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'{"contracts":["wasm14hj2tavq8fpesdwxxcu44rty3hh90vhujrvcmstl4zr3txmfvw9s0phg4d"],"pagination":{"next_key":null,"total":"0"}}\nwasm14hj2tavq8fpesdwxxcu44rty3hh90vhujrvcmstl4zr3txmfvw9s0phg4d\naddress: wasm14hj2tavq8fpesdwxxcu44rty3hh90vhujrvcmstl4zr3txmfvw9s0phg4d\ncontract_info:\n  admin: ""\n  code_id: "1"\n  created: null\n  creator: wasm1y9ceqvnsnm9xtcdmhrjvv4rslgwfzmrzky2c5z\n  extension: null\n  ibc_port_id: ""\n  label: name service\nbalances: []\npagination:\n  next_key: null\n  total: "0"\n')),(0,r.kt)("p",null,"Maintenant, inscrivons un nom au contrat de notre adresse de portefeuille :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'REGISTER=\'{"register":{"name":"fred"}}\'\nwasmd tx wasm execute $CONTRACT "$REGISTER" --amount 100uwasm --from $KEY_NAME $TXFLAG $NODEIP --keyring-backend test -y\n')),(0,r.kt)("p",null,"Your output will look similar to below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'DEIP --keyring-backend test -y\ngas estimate: 167533\ncode: 0\ncodespace: ""\ndata: ""\nevents: []\ngas_used: "0"\ngas_wanted: "0"\nheight: "0"\ninfo: ""\nlogs: []\nraw_log: \'[]\'\ntimestamp: ""\ntx: null\ntxhash: C147257485B72E7FFA5FDB943C94CE951A37817554339586FFD645AD2AA397C3\n')),(0,r.kt)("p",null,"Next, query the owner of the name record:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'NAME_QUERY=\'{"resolve_record": {"name": "fred"}}\'\nwasmd query wasm contract-state smart $CONTRACT "$NAME_QUERY" $CHAINFLAG $NODEIP --output json\n')),(0,r.kt)("p",null,"You'll see the owner's address in a JSON response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'{"data":{"address":"wasm1y9ceqvnsnm9xtcdmhrjvv4rslgwfzmrzky2c5z"}}\n')),(0,r.kt)("p",null,"Gr\xe2ce \xe0 cela, nous avons g\xe9n\xe9r\xe9 des exemples et interagi avec le contrat intelligent du nom de domaine CosmWasm en utilisant Celestia !"))}d.isMDXComponent=!0}}]);