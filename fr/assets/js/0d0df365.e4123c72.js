"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[8522],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),l=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(t),m=a,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||s;return t?n.createElement(f,o(o({ref:r},c),{},{components:t})):n.createElement(f,o({ref:r},c))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=p;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6415:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return l}});var n=t(3117),a=(t(7294),t(3905));const s={},o="Processus de Hardfork de Celestia",i={unversionedId:"nodes/hardfork-process",id:"nodes/hardfork-process",title:"Processus de Hardfork de Celestia",description:"Les r\xe9seaux Blockchain ont souvent besoin de se mettre \xe0 jour avec de nouvelles fonctionnalit\xe9s qui n\xe9cessitent un travail de coordination entre les validateurs avant d'activer les mises \xe0 jour.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/nodes/hardfork-process.md",sourceDirName:"nodes",slug:"/nodes/hardfork-process",permalink:"/fr/nodes/hardfork-process",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/nodes/hardfork-process.md",tags:[],version:"current",frontMatter:{},sidebar:"nodes",previous:{title:"Helpful CLI commands",permalink:"/fr/nodes/celestia-app-commands"},next:{title:"SystemD",permalink:"/fr/nodes/systemd"}},u={},l=[{value:"Processus g\xe9n\xe9ral",id:"processus-g\xe9n\xe9ral",level:2},{value:"Hardfork Mocha",id:"hardfork-mocha",level:3}],c={toc:l};function d(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"processus-de-hardfork-de-celestia"},"Processus de Hardfork de Celestia"),(0,a.kt)("p",null,"Les r\xe9seaux Blockchain ont souvent besoin de se mettre \xe0 jour avec de nouvelles fonctionnalit\xe9s qui n\xe9cessitent un travail de coordination entre les validateurs avant d'activer les mises \xe0 jour."),(0,a.kt)("p",null,"Ce processus est appel\xe9 un hardfork ou une mise \xe0 jour r\xe9seau. Dans ce cas, l'\xe9quipe Celestia Labs coordonnera les validateurs sur ce qu'ils doivent faire pour \xeatre pr\xeats pour un hardfork \xe0 venir."),(0,a.kt)("p",null,"Les Hardforks ne sont pas r\xe9trocompatibles avec les anciennes versions du logiciel r\xe9seau, c'est pourquoi il est important que les validateurs mettent \xe0 jour leur logiciel pour continuer \xe0 valider sur le r\xe9seau apr\xe8s les mises \xe0 niveau du r\xe9seau."),(0,a.kt)("h2",{id:"processus-g\xe9n\xe9ral"},"Processus g\xe9n\xe9ral"),(0,a.kt)("p",null,"Le processus g\xe9n\xe9ral peut \xeatre divis\xe9 en plusieurs composants :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Sp\xe9cifications et fonctionnalit\xe9s du Hardfork (d\xe9finies par la description des fonctionnalit\xe9s et l'impl\xe9mentation du code de ces fonctionnalit\xe9s)."),(0,a.kt)("li",{parentName:"ul"},"Binaire utilis\xe9 pour ajouter ces fonctionnalit\xe9s (une nouvelle version binaire avec ces fonctionnalit\xe9s sera fournie par l'\xe9quipe Celestia afin que les validateurs puissent mettre \xe0 jour leurs nodes vers le nouveau binaire)."),(0,a.kt)("li",{parentName:"ul"},"Un num\xe9ro de bloc pour la mise \xe0 jour du r\xe9seau (m\xeame si les validateurs mettent \xe0 jour leur binaire pour \xeatre pr\xeats pour le hardfork, la mise \xe0 niveau du r\xe9seau ne se fait pas tout de suite, mais un peu de temps apr\xe8s \xe0 un num\xe9ro de bloc sp\xe9cifique)."),(0,a.kt)("li",{parentName:"ul"},"Tester les fonctionnalit\xe9s (se produit d'abord sur les r\xe9seaux de test avant de les activer sur le r\xe9seau principal afin de s'assurer que le r\xe9seau peut se mettre \xe0 niveau en toute s\xe9curit\xe9).")),(0,a.kt)("p",null,"Les deux r\xe9seaux de test sur lesquels les hardforks sont d\xe9ploy\xe9s sont:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/fr/nodes/arabica-devnet"},"Arabica")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/fr/nodes/mamaki-testnet"},"Mamaki"))),(0,a.kt)("h3",{id:"hardfork-mocha"},"Hardfork Mocha"),(0,a.kt)("p",null,"Celestia planifie la mise \xe0 jour du Hardfork Mocha sur le Testnet Mamaki. Ce hardfork est unique car il r\xe9initialisera le r\xe9seau Mamaki au bloc 0 tout en maintenant l'\xe9tat actuel et renommera \xe9galement Mamaki en Mocha."),(0,a.kt)("p",null,"Le nouvel id de la cha\xeene sera ",(0,a.kt)("inlineCode",{parentName:"p"},"mocha"),"."),(0,a.kt)("p",null,"Les logs de parution pour ",(0,a.kt)("inlineCode",{parentName:"p"},"mocha")," peuvent \xeatre trouv\xe9s ici (TBD)."),(0,a.kt)("p",null,"La fonctionnalit\xe9 la plus excitante est de d\xe9finir le terrain pour QGB (Quantum Gravity Bridge) sur Mocha."),(0,a.kt)("p",null,"Les validateurs devront g\xe9n\xe9rer 2 nouvelles cl\xe9s pour \xeatre pr\xeats pour le QGB. Notez que apr\xe8s le Hardfork Mocha, QGB ne se lancera pas encore, donc vous pouvez \xe9changer ces cl\xe9s pour de nouvelles si n\xe9cessaire. Les cl\xe9s n\xe9cessaires sont:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1 cl\xe9 EVM"),(0,a.kt)("li",{parentName:"ul"},"1 cl\xe9 Celestia")),(0,a.kt)("p",null,"Donc, pour que cela se produise, les validateurs devront maintenir deux nouvelles cl\xe9s afin d'avoir une mise \xe0 jour r\xe9ussie."),(0,a.kt)("p",null,"Ces deux cl\xe9s devront \xeatre ajout\xe9es \xe0 2 nouveaux drapeaux sur ",(0,a.kt)("inlineCode",{parentName:"p"},"celestia-app"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--evm-address"),": Ce drapeau doit contenir une adresse EVM ",(0,a.kt)("inlineCode",{parentName:"li"},"0x"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--orchesrator-address"),": Ce drapeau doit contenir une adresse ",(0,a.kt)("inlineCode",{parentName:"li"},"celestia1")," nouvellement g\xe9n\xe9r\xe9e. Les validateurs peuvent certainement utiliser leurs adresses Celestia existantes ici, mais il est recommand\xe9 d'en cr\xe9er une nouvelle.")))}d.isMDXComponent=!0}}]);