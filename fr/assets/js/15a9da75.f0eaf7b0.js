"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[9981],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(r),f=o,d=p["".concat(i,".").concat(f)]||p[f]||u[f]||a;return r?n.createElement(d,s(s({ref:t},m),{},{components:r})):n.createElement(d,s({ref:t},m))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2533:function(e,t,r){r.r(t),r.d(t,{assets:function(){return i},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return c}});var n=r(3117),o=(r(7294),r(3905));const a={sidebar_label:"Aper\xe7u de CosmWasm"},s="CosmWasm sur Rollmint",l={unversionedId:"developers/cosmwasm",id:"developers/cosmwasm",title:"CosmWasm sur Rollmint",description:"CosmWasm is a smart contracting platform built for the Cosmos ecosystem by making use of WebAssembly (Wasm) to build smart contracts for Cosmos-SDK. In this tutorial, we will be exploring how to integrate CosmWasm with Celestia's Data Availability Layer using Rollmint.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developers/cosmwasm.md",sourceDirName:"developers",slug:"/developers/cosmwasm",permalink:"/fr/developers/cosmwasm",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/cosmwasm.md",tags:[],version:"current",frontMatter:{sidebar_label:"Aper\xe7u de CosmWasm"},sidebar:"developers",previous:{title:"CosmWasm",permalink:"/fr/category/cosmwasm"},next:{title:"Les D\xe9pendances CosmWasm",permalink:"/fr/developers/cosmwasm-dependency"}},i={},c=[],m={toc:c};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cosmwasm-sur-rollmint"},"CosmWasm sur Rollmint"),(0,o.kt)("p",null,"CosmWasm is a smart contracting platform built for the Cosmos ecosystem by making use of ",(0,o.kt)("a",{parentName:"p",href:"https://webassembly.org/"},"WebAssembly")," (Wasm) to build smart contracts for Cosmos-SDK. In this tutorial, we will be exploring how to integrate CosmWasm with Celestia's ",(0,o.kt)("a",{parentName:"p",href:"/fr/concepts/how-celestia-works/data-availability-layer"},"Data Availability Layer")," using ",(0,o.kt)("a",{parentName:"p",href:"/fr/developers/rollmint"},"Rollmint"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note : ce tutoriel va explorer le d\xe9veloppement avec Rollmint, qui est encore en phase alpha. If you run into bugs, please write a Github ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/celestiaorg/docs/issues/new/choose"},"Issue ticket")," or let us know in our ",(0,o.kt)("a",{parentName:"p",href:"https://discord.com/invite/YsnTPcSfWQ"},"Discord"),'. Furthermore, while Rollmint allows you to build sovereign rollups on Celestia, it currently does not support fraud proofs yet and is therefore running in "pessimistic" mode, where nodes would need to re-execute the transactions to check the validity of the chain (i.e. a full node). Enfin, Rollmint ne supporte actuellement qu\'un seul s\xe9quenceur.')),(0,o.kt)("p",null,"Vous pouvez en apprendre davantage sur CosmWasm ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmwasm.com/docs/1.0/"},"ici"),"."),(0,o.kt)("p",null,"Dans ce tutoriel, nous allons apprendre \xe0 :"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/cosmwasm-dependency"},"Configurer vos d\xe9pendances pour vos contrats intelligents de CosmWasm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/cosmwasm-dependency#wasmd-installation"},"Configurer Rollmint sur CosmWasm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/cosmwasm-environment"},"Instancier un r\xe9seau local pour votre chaine CosmWasm connect\xe9e \xe0 Celestia")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/cosmwasm-contract-deployment"},"D\xe9ployer un contrat intelligent en Rust sur la chaine CosmWasm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/fr/developers/cosmwasm-contract-interaction"},"Int\xe9ragir avec le contrat intelligent"))),(0,o.kt)("p",null,"Le contrat intelligent que nous utiliserons dans ce tutoriel est un fourni par l'\xe9quipe CosmWasm pour l'achat d'espace de nom."),(0,o.kt)("p",null,"Vous pouvez trouver le contrat ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/InterWasm/cw-contracts/tree/main/contracts/nameservice"},"ici"),"."),(0,o.kt)("p",null,"Comment \xe9crire le contrat intelligent en Rust pour le Nameservice ne fait pas l'objet de ce tutoriel. Dans le futur, nous ajouterons davantage de tutoriels pour \xe9crire des contrats intelligents de CosmWasm sur Celestia."))}u.isMDXComponent=!0}}]);