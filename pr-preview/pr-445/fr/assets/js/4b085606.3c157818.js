"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[5182],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),i=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=i(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=i(t),m=a,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||o;return t?r.createElement(h,s(s({ref:n},d),{},{components:t})):r.createElement(h,s({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var i=2;i<o;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9555:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return i}});var r=t(3117),a=(t(7294),t(3905));const o={sidebar_label:"Celestia Node Gateway"},s="API Playground",p={unversionedId:"developers/node-gateway",id:"developers/node-gateway",title:"API Playground",description:"There is a preview to the celestia-node API playground available at https://node-rpc-docs.vercel.app/.",source:"@site/docs/developers/node-gateway.md",sourceDirName:"developers",slug:"/developers/node-gateway",permalink:"/pr-preview/pr-445/fr/developers/node-gateway",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/node-gateway.md",tags:[],version:"current",frontMatter:{sidebar_label:"Celestia Node Gateway"},sidebar:"developers",previous:{title:"Node API",permalink:"/pr-preview/pr-445/fr/developers/node-api"},next:{title:"Rollmint",permalink:"/pr-preview/pr-445/fr/developers/rollmint"}},l={},i=[{value:"<code>DASER</code> Module",id:"daser-module",level:2},{value:"<code>SamplingStats()</code> <code>das.SamplingStats</code> <strong>(perms: read)</strong>",id:"samplingstats-dassamplingstats-perms-read",level:3},{value:"<code>SamplingStats()</code> example request",id:"samplingstats-example-request",level:4},{value:"<code>SamplingStats()</code> example response",id:"samplingstats-example-response",level:4},{value:"<code>WaitCatchUp()</code> <strong>(perms: read)</strong>",id:"waitcatchup-perms-read",level:3},{value:"Permissions: read",id:"permissions-read",level:4},{value:"<code>WaitCatchUp()</code> example request",id:"waitcatchup-example-request",level:4},{value:"<code>WaitCatchUp()</code> example response",id:"waitcatchup-example-response",level:4},{value:"<code>FRAUD</code> Module",id:"fraud-module",level:2},{value:"<code>Get(proofType fraud.ProofType)</code> <code>[]Proof</code> <strong>(perms: public)</strong>",id:"getprooftype-fraudprooftype-proof-perms-public",level:3},{value:"<code>Get()</code> example request",id:"get-example-request",level:4},{value:"<code>Get()</code> example response",id:"get-example-response",level:4},{value:"<code>Subscribe(proofType fraud.ProofType)</code> <code>&lt;- chan Proof</code> <strong>(perms: public)</strong>",id:"subscribeprooftype-fraudprooftype---chan-proof-perms-public",level:3},{value:"<code>Subscribe()</code> example request",id:"subscribe-example-request",level:4},{value:"<code>Subscribe()</code> example response",id:"subscribe-example-response",level:4},{value:"<code>HEADER</code> Module",id:"header-module",level:2},{value:"<code>GetByHeight(u uint64)</code> <code>*header.ExtendedHeader</code> <strong>(perms: public)</strong>",id:"getbyheightu-uint64-headerextendedheader-perms-public",level:3},{value:"<code>GetByHeight()</code> example request",id:"getbyheight-example-request",level:4},{value:"<code>GetByHeight()</code> example response",id:"getbyheight-example-response",level:4},{value:"<code>Head()</code> <code>*header.ExtendedHeader</code> <strong>(perms: public)</strong>",id:"head-headerextendedheader-perms-public",level:3},{value:"<code>Head()</code> example request",id:"head-example-request",level:4},{value:"<code>Head ()</code> example response",id:"head--example-response",level:4},{value:"<code>isSyncing() bool</code> <code>*header.ExtendedHeader</code> <strong>(perms: public)</strong>",id:"issyncing-bool-headerextendedheader-perms-public",level:3},{value:"<code>isSyncing()</code> example request",id:"issyncing-example-request",level:4},{value:"<code>isSyncing()</code> example response",id:"issyncing-example-response",level:4}],d={toc:i};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"api-playground"},"API Playground"),(0,a.kt)("p",null,"There is a preview to the ",(0,a.kt)("inlineCode",{parentName:"p"},"celestia-node")," API playground available at ",(0,a.kt)("a",{parentName:"p",href:"https://node-rpc-docs.vercel.app/"},"https://node-rpc-docs.vercel.app/"),"."),(0,a.kt)("h2",{id:"daser-module"},(0,a.kt)("inlineCode",{parentName:"h2"},"DASER")," Module"),(0,a.kt)("h3",{id:"samplingstats-dassamplingstats-perms-read"},(0,a.kt)("inlineCode",{parentName:"h3"},"SamplingStats()")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"das.SamplingStats")," ",(0,a.kt)("strong",{parentName:"h3"},"(perms: read)")),(0,a.kt)("p",null,"SamplingStats returns the current statistics over the DA sampling process."),(0,a.kt)("h4",{id:"samplingstats-example-request"},(0,a.kt)("inlineCode",{parentName:"h4"},"SamplingStats()")," example request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "daser.SamplingStats",\n  "params": []\n}\n')),(0,a.kt)("h4",{id:"samplingstats-example-response"},(0,a.kt)("inlineCode",{parentName:"h4"},"SamplingStats()")," example response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    {\n      "head_of_sampled_chain": 27499,\n      "head_of_catchup": 29101,\n      "network_head_height": 30483,\n      "workers": [\n        {\n          "current": 28806,\n          "from": 28802,\n          "to": 28901\n        },\n        {\n          "current": 28906,\n          "from": 28902,\n          "to": 29001\n        },\n        {\n          "current": 27794,\n          "from": 27702,\n          "to": 27801\n        },\n        {\n          "current": 28191,\n          "from": 28102,\n          "to": 28201\n        },\n        {\n          "current": 28420,\n          "from": 28402,\n          "to": 28501\n        },\n        {\n          "current": 28334,\n          "from": 28302,\n          "to": 28401\n        },\n        {\n          "current": 27691,\n          "from": 27602,\n          "to": 27701\n        },\n        {\n          "current": 27889,\n          "from": 27802,\n          "to": 27901\n        },\n        {\n          "current": 27990,\n          "from": 27902,\n          "to": 28001\n        },\n        {\n          "current": 28293,\n          "from": 28202,\n          "to": 28301\n        },\n        {\n          "current": 28092,\n          "from": 28002,\n          "to": 28101\n        },\n        {\n          "current": 29004,\n          "from": 29002,\n          "to": 29101\n        },\n        {\n          "current": 28708,\n          "from": 28702,\n          "to": 28801\n        },\n        {\n          "current": 28513,\n          "from": 28502,\n          "to": 28601\n        },\n        {\n          "current": 27500,\n          "from": 27402,\n          "to": 27501\n        },\n        {\n          "current": 28615,\n          "from": 28602,\n          "to": 28701\n        }\n      ],\n      "concurrency": 16,\n      "catch_up_done": false,\n      "is_running": true\n    }\n  ]\n}\n')),(0,a.kt)("h3",{id:"waitcatchup-perms-read"},(0,a.kt)("inlineCode",{parentName:"h3"},"WaitCatchUp()")," ",(0,a.kt)("strong",{parentName:"h3"},"(perms: read)")),(0,a.kt)("h4",{id:"permissions-read"},"Permissions: read"),(0,a.kt)("p",null,"WaitCatchUp blocks until DASer finishes catching up to the network head."),(0,a.kt)("h4",{id:"waitcatchup-example-request"},(0,a.kt)("inlineCode",{parentName:"h4"},"WaitCatchUp()")," example request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "daser.WaitCatchUp",\n  "params": []\n}\n')),(0,a.kt)("h4",{id:"waitcatchup-example-response"},(0,a.kt)("inlineCode",{parentName:"h4"},"WaitCatchUp()")," example response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": []\n}\n')),(0,a.kt)("h2",{id:"fraud-module"},(0,a.kt)("inlineCode",{parentName:"h2"},"FRAUD")," Module"),(0,a.kt)("h3",{id:"getprooftype-fraudprooftype-proof-perms-public"},(0,a.kt)("inlineCode",{parentName:"h3"},"Get(proofType fraud.ProofType)")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"[]Proof")," ",(0,a.kt)("strong",{parentName:"h3"},"(perms: public)")),(0,a.kt)("p",null,"Get fetches fraud proofs from the disk by its type."),(0,a.kt)("h4",{id:"get-example-request"},(0,a.kt)("inlineCode",{parentName:"h4"},"Get()")," example request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "fraud.Get",\n  "params": [\n    "badencoding"\n  ]\n}\n')),(0,a.kt)("h4",{id:"get-example-response"},(0,a.kt)("inlineCode",{parentName:"h4"},"Get()")," example response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    [\n      {\n        "proof_type": "badencoding",\n        "data": "ChJiYWQgZW5jb2RpbmcgcHJvb2YQKg=="\n      }\n    ]\n  ]\n}\n')),(0,a.kt)("h3",{id:"subscribeprooftype-fraudprooftype---chan-proof-perms-public"},(0,a.kt)("inlineCode",{parentName:"h3"},"Subscribe(proofType fraud.ProofType)")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"<- chan Proof")," ",(0,a.kt)("strong",{parentName:"h3"},"(perms: public)")),(0,a.kt)("p",null,"Subscribe allows to subscribe on a Proof pub sub topic by its type."),(0,a.kt)("h4",{id:"subscribe-example-request"},(0,a.kt)("inlineCode",{parentName:"h4"},"Subscribe()")," example request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "fraud.Subscribe",\n  "params": [\n    "badencoding"\n  ]\n}\n')),(0,a.kt)("h4",{id:"subscribe-example-response"},(0,a.kt)("inlineCode",{parentName:"h4"},"Subscribe()")," example response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    [\n      {\n        "title": "typeUnsupportedByJSONSchema",\n        "type": "[\'object\']"\n      }\n    ]\n  ]\n}\n')),(0,a.kt)("h2",{id:"header-module"},(0,a.kt)("inlineCode",{parentName:"h2"},"HEADER")," Module"),(0,a.kt)("h3",{id:"getbyheightu-uint64-headerextendedheader-perms-public"},(0,a.kt)("inlineCode",{parentName:"h3"},"GetByHeight(u uint64)")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"*header.ExtendedHeader")," ",(0,a.kt)("strong",{parentName:"h3"},"(perms: public)")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"GetByHeight")," returns the ",(0,a.kt)("inlineCode",{parentName:"p"},"ExtendedHeader")," at the given height, blocking until header has been processed by the store or context deadline is exceeded."),(0,a.kt)("h4",{id:"getbyheight-example-request"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetByHeight()")," example request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "header.GetByHeight",\n  "params": [\n    42\n  ]\n}\n')),(0,a.kt)("h4",{id:"getbyheight-example-response"},(0,a.kt)("inlineCode",{parentName:"h4"},"GetByHeight()")," example response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    {\n      "validator_set": {\n        "validators": [\n          {\n            "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",\n            "pub_key": {\n              "type": "tendermint/PubKeyEd25519",\n              "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="\n            },\n            "voting_power": "5000000000",\n            "proposer_priority": "0"\n          }\n        ],\n        "proposer": {\n          "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",\n          "pub_key": {\n            "type": "tendermint/PubKeyEd25519",\n            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="\n          },\n          "voting_power": "5000000000",\n          "proposer_priority": "0"\n        }\n      },\n      "header": {\n        "version": {\n          "block": 11\n        },\n        "chain_id": "arabica-2",\n        "height": 42,\n        "time": "2022-11-15T17:04:04.364455555Z",\n        "last_block_id": {\n          "hash": "D35285797CB08451E8E85B97B0259A3C98E42BFCAEA5465152EE68DBD5760935",\n          "parts": {\n            "total": 1,\n            "hash": "EF5E90A836E5676B98177FB38B0C0BB7D957F71BBA6109B1D79C65344BC6C7FB"\n          }\n        },\n        "last_commit_hash": "DB5BB6A1518FD618D5B6607E9507E60E52BB9B532E5718D6D74F1F510FE5D10F",\n        "data_hash": "6F52DAC16545E45725BE6EA32AED55266E45034800EEE1D87C9428F4844EA47A",\n        "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",\n        "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",\n        "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",\n        "app_hash": "9E52BD09B71043C25FBC7C8D928490E051811A10E978C66E3519A41352DD0699",\n        "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",\n        "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",\n        "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"\n      },\n      "commit": {\n        "height": 42,\n        "round": 0,\n        "block_id": {\n          "hash": "F22BAEF4D99A835D9F2CA92C58E8AA48C589284B7916FF073A1D778C73EA4CC1",\n          "parts": {\n            "total": 1,\n            "hash": "9961CC7B6B9BE558D0FED40675232F4B37BEE75419C815240804C1A1801CF626"\n          }\n        },\n        "signatures": [\n          {\n            "block_id_flag": 2,\n            "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",\n            "timestamp": "2022-11-15T17:04:29.384867372Z",\n            "signature": "0+INXvvzUExQToNpmQhhvFySbQYFqoYTpgFACP+3lkSWGh48ukkMMqj2UnnAzqQhabuKeXx/5f8hiwEzeMM6Dg=="\n          }\n        ]\n      },\n      "dah": {\n        "row_roots": [\n          "//////////7//////////rr7xfWEpBugDbgBYmKPvIOGpNDJUjrMyS17ZyAnUvK7",\n          "/////////////////////zEUYTRl2BUUeFrpCh4OmiYKeTgtgYfn/tCeVNNVTMv4"\n        ],\n        "column_roots": [\n          "//////////7//////////rr7xfWEpBugDbgBYmKPvIOGpNDJUjrMyS17ZyAnUvK7",\n          "/////////////////////zEUYTRl2BUUeFrpCh4OmiYKeTgtgYfn/tCeVNNVTMv4"\n        ]\n      }\n    }\n  ]\n}\n')),(0,a.kt)("h3",{id:"head-headerextendedheader-perms-public"},(0,a.kt)("inlineCode",{parentName:"h3"},"Head()")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"*header.ExtendedHeader")," ",(0,a.kt)("strong",{parentName:"h3"},"(perms: public)")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Head")," returns the ",(0,a.kt)("inlineCode",{parentName:"p"},"ExtendedHeader")," of the chain head."),(0,a.kt)("h4",{id:"head-example-request"},(0,a.kt)("inlineCode",{parentName:"h4"},"Head()")," example request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "header.Head",\n  "params": []\n}\n')),(0,a.kt)("h4",{id:"head--example-response"},(0,a.kt)("inlineCode",{parentName:"h4"},"Head ()")," example response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    {\n      "validator_set": {\n        "validators": [\n          {\n            "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",\n            "pub_key": {\n              "type": "tendermint/PubKeyEd25519",\n              "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="\n            },\n            "voting_power": "5000000000",\n            "proposer_priority": "0"\n          }\n        ],\n        "proposer": {\n          "address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",\n          "pub_key": {\n            "type": "tendermint/PubKeyEd25519",\n            "value": "aoB4xU9//HAqOP9ciyp0+PTdZxt/UGKgZOabU6JxW8o="\n          },\n          "voting_power": "5000000000",\n          "proposer_priority": "0"\n        }\n      },\n      "header": {\n        "version": {\n          "block": 11\n        },\n        "chain_id": "arabica-2",\n        "height": 42,\n        "time": "2022-11-15T17:04:04.364455555Z",\n        "last_block_id": {\n          "hash": "D35285797CB08451E8E85B97B0259A3C98E42BFCAEA5465152EE68DBD5760935",\n          "parts": {\n            "total": 1,\n            "hash": "EF5E90A836E5676B98177FB38B0C0BB7D957F71BBA6109B1D79C65344BC6C7FB"\n          }\n        },\n        "last_commit_hash": "DB5BB6A1518FD618D5B6607E9507E60E52BB9B532E5718D6D74F1F510FE5D10F",\n        "data_hash": "6F52DAC16545E45725BE6EA32AED55266E45034800EEE1D87C9428F4844EA47A",\n        "validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",\n        "next_validators_hash": "883A0C92B8D976312B249C1397E73CF2981A9EB715717CBEE3800B8380C22C1D",\n        "consensus_hash": "048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",\n        "app_hash": "9E52BD09B71043C25FBC7C8D928490E051811A10E978C66E3519A41352DD0699",\n        "last_results_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",\n        "evidence_hash": "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",\n        "proposer_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA"\n      },\n      "commit": {\n        "height": 42,\n        "round": 0,\n        "block_id": {\n          "hash": "F22BAEF4D99A835D9F2CA92C58E8AA48C589284B7916FF073A1D778C73EA4CC1",\n          "parts": {\n            "total": 1,\n            "hash": "9961CC7B6B9BE558D0FED40675232F4B37BEE75419C815240804C1A1801CF626"\n          }\n        },\n        "signatures": [\n          {\n            "block_id_flag": 2,\n            "validator_address": "57DC09D28388DBF977CFC30EF50BE8B644CCC1FA",\n            "timestamp": "2022-11-15T17:04:29.384867372Z",\n            "signature": "0+INXvvzUExQToNpmQhhvFySbQYFqoYTpgFACP+3lkSWGh48ukkMMqj2UnnAzqQhabuKeXx/5f8hiwEzeMM6Dg=="\n          }\n        ]\n      },\n      "dah": {\n        "row_roots": [\n          "//////////7//////////rr7xfWEpBugDbgBYmKPvIOGpNDJUjrMyS17ZyAnUvK7",\n          "/////////////////////zEUYTRl2BUUeFrpCh4OmiYKeTgtgYfn/tCeVNNVTMv4"\n        ],\n        "column_roots": [\n          "//////////7//////////rr7xfWEpBugDbgBYmKPvIOGpNDJUjrMyS17ZyAnUvK7",\n          "/////////////////////zEUYTRl2BUUeFrpCh4OmiYKeTgtgYfn/tCeVNNVTMv4"\n        ]\n      }\n    }\n  ]\n}\n')),(0,a.kt)("h3",{id:"issyncing-bool-headerextendedheader-perms-public"},(0,a.kt)("inlineCode",{parentName:"h3"},"isSyncing() bool")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"*header.ExtendedHeader")," ",(0,a.kt)("strong",{parentName:"h3"},"(perms: public)")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"IsSyncing")," returns the status of sync."),(0,a.kt)("h4",{id:"issyncing-example-request"},(0,a.kt)("inlineCode",{parentName:"h4"},"isSyncing()")," example request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "method": "header.IsSyncing",\n  "params": []\n}\n')),(0,a.kt)("h4",{id:"issyncing-example-response"},(0,a.kt)("inlineCode",{parentName:"h4"},"isSyncing()")," example response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 1,\n  "jsonrpc": "2.0",\n  "result": [\n    true\n  ]\n}\n')))}c.isMDXComponent=!0}}]);