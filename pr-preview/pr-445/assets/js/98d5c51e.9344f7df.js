"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[5727],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),f=o,y=d["".concat(s,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(y,c(c({ref:t},p),{},{components:r})):n.createElement(y,c({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5904:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return l}});var n=r(3117),o=(r(7294),r(3905));const a={sidebar_label:"Gateway API docs"},c="Gateway API docs",i={unversionedId:"developers/node-gateway-docs",id:"developers/node-gateway-docs",title:"Gateway API docs",description:"This page contains the API documentation for the Gateway API. The Gateway API is a REST API that allows you to send and receive messages to and from the Gateway.",source:"@site/docs/developers/node-gateway-docs.mdx",sourceDirName:"developers",slug:"/developers/node-gateway-docs",permalink:"/pr-preview/pr-445/developers/node-gateway-docs",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/node-gateway-docs.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Gateway API docs"},sidebar:"developers",previous:{title:"Node API tutorial",permalink:"/pr-preview/pr-445/developers/node-api-tutorial"},next:{title:"Rollkit",permalink:"/pr-preview/pr-445/developers/rollkit"}},s={},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gateway-api-docs"},"Gateway API docs"),(0,o.kt)("p",null,"This page contains the API documentation for the Gateway API. The Gateway API is a REST API that allows you to send and receive messages to and from the Gateway."),(0,o.kt)("p",null,"The Gateway API wraps methods from the JSON RPC API."))}u.isMDXComponent=!0}}]);