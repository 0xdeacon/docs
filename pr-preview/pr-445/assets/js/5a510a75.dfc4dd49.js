"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[1739],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=l.createContext({}),i=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=i(e.components);return l.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=i(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?l.createElement(g,o(o({ref:t},p),{},{components:n})):l.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[d]="string"==typeof e?e:a,o[1]=u;for(var i=2;i<r;i++)o[i]=n[i];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var l=n(7294),a=n(6010);const r={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return l.createElement("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>y});var l=n(7462),a=n(7294),r=n(6010),o=n(2466),u=n(6550),s=n(1980),i=n(7392),p=n(12);function d(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:l,default:a}}=e;return{value:t,label:n,attributes:l,default:a}}))}function c(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const l=(0,u.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(l.location.search);t.set(r,e),l.replace({...l.location,search:t.toString()})}),[r,l])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:l}=e,r=c(e),[o,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const l=n.find((e=>e.default))??n[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:r}))),[s,i]=g({queryString:n,groupId:l}),[d,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[l,r]=(0,p.Nk)(n);return[l,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:l}),k=(()=>{const e=s??d;return m({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{k&&u(k)}),[k]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);u(e),i(e),b(e)}),[i,b,r]),tabValues:r}}var k=n(2389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:u,selectValue:s,tabValues:i}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),c=e=>{const t=e.currentTarget,n=p.indexOf(t),l=i[n].value;l!==u&&(d(t),s(l))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},i.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,l.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:c},o,{className:(0,r.Z)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":u===t})}),n??t)})))}function f(e){let{lazy:t,children:n,selectedValue:l}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===l));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==l}))))}function w(e){const t=b(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",h.tabList)},a.createElement(v,(0,l.Z)({},e,t)),a.createElement(f,(0,l.Z)({},e,t)))}function y(e){const t=(0,k.Z)();return a.createElement(w,(0,l.Z)({key:String(t)},e))}},578:(e,t,n)=>{n.d(t,{Z:()=>l});const l=Object.freeze({golangNode:"1.19.1",golangApp:"1.19.1",golangCore:"1.19.1",golang:"1.19.1",arabicaChainId:"arabica-6"})},2409:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>b,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var l=n(7462),a=(n(7294),n(3905)),r=n(578),o=n(4866),u=n(5162);const s={sidebar_label:"Setting up environment"},i="Development environment",p={unversionedId:"nodes/environment",id:"nodes/environment",title:"Development environment",description:"This tutorial will go over setting up your development environment to run",source:"@site/docs/nodes/environment.mdx",sourceDirName:"nodes",slug:"/nodes/environment",permalink:"/pr-preview/pr-445/nodes/environment",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/nodes/environment.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Setting up environment"},sidebar:"nodes",previous:{title:"Quick start",permalink:"/pr-preview/pr-445/nodes/quick-start"},next:{title:"Installing celestia-node",permalink:"/pr-preview/pr-445/nodes/celestia-node"}},d={},c=[{value:"Install dependencies",id:"install-dependencies",level:2},{value:"\ud83c\udf7a Installing Homebrew",id:"-installing-homebrew",level:4},{value:"\ud83d\uddc4 Install wget and jq",id:"-install-wget-and-jq",level:4},{value:"\ud83c\udf7a Installing Homebrew",id:"-installing-homebrew-1",level:4},{value:"\ud83d\uddc4 Install wget and jq",id:"-install-wget-and-jq-1",level:4},{value:"Install Golang",id:"install-golang",level:3}],m={toc:c},g="wrapper";function b(e){let{components:t,...n}=e;return(0,a.kt)(g,(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"development-environment"},"Development environment"),(0,a.kt)("p",null,"This tutorial will go over setting up your development environment to run\nCelestia software. This environment can be used for development, building\nbinaries, and running nodes."),(0,a.kt)("h2",{id:"install-dependencies"},"Install dependencies"),(0,a.kt)("p",null,"Once you have setup your instance, ssh into the instance to begin installing the\ndependencies needed to run a node."),(0,a.kt)("p",null,"First, make sure to update and upgrade the OS:"),(0,a.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"apt",label:"APT",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt update && sudo apt upgrade -y\n"))),(0,a.kt)(u.Z,{value:"yum",label:"YUM",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo yum update\n")))),(0,a.kt)("p",null,"These are essential packages that are necessary to execute many tasks like\ndownloading files, compiling, and monitoring the node:"),(0,a.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"apt",label:"APT",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential git make ncdu -y\n"))),(0,a.kt)(u.Z,{value:"yum",label:"YUM",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo yum install curl tar wget clang pkg-config libssl-dev jq build-essential git make ncdu -y\n"))),(0,a.kt)(u.Z,{value:"apple",label:"Mac (Apple)",mdxType:"TabItem"},(0,a.kt)("h4",{id:"-installing-homebrew"},"\ud83c\udf7a Installing Homebrew"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://brew.sh"},"Homebrew")," is a package manager for macOS and Linux and will\nallow you to install your dependencies. Install it by running this command in\nyour terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n')),(0,a.kt)("p",null,"Be sure to run the commands in the output that are similar to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"==> Next steps:\n- Run these three commands in your terminal to add Homebrew to your PATH:\n    echo '# Set PATH, MANPATH, etc., for Homebrew.' >> /Users/joshstein/.zprofile\n    echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> /Users/joshstein/.zprofile\n    eval \"$(/opt/homebrew/bin/brew shellenv)\"\n")),(0,a.kt)("h4",{id:"-install-wget-and-jq"},"\ud83d\uddc4 Install wget and jq"),(0,a.kt)("p",null,"Using Homebrew, in your terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"brew install wget && brew install jq\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.gnu.org/software/wget"},"wget")," is an internet file retriever and\n",(0,a.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq"},"jq")," is a lightweight command-line JSON\nprocessor.")),(0,a.kt)(u.Z,{value:"mac",label:"Mac (Intel)",mdxType:"TabItem"},(0,a.kt)("h4",{id:"-installing-homebrew-1"},"\ud83c\udf7a Installing Homebrew"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://brew.sh"},"Homebrew")," is a package manager for macOS and Linux and will\nallow you to install your dependencies. Install it by running this command in\nyour terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n')),(0,a.kt)("p",null,"Be sure to run the commands in the output that are similar to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"==> Next steps:\n- Run these three commands in your terminal to add Homebrew to your PATH:\n    echo '# Set PATH, MANPATH, etc., for Homebrew.' >> /Users/joshstein/.zprofile\n    echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> /Users/joshstein/.zprofile\n    eval \"$(/opt/homebrew/bin/brew shellenv)\"\n")),(0,a.kt)("h4",{id:"-install-wget-and-jq-1"},"\ud83d\uddc4 Install wget and jq"),(0,a.kt)("p",null,"Using Homebrew, in your terminal:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"brew install wget && brew install jq\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.gnu.org/software/wget"},"wget")," is an internet file retriever and\n",(0,a.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq"},"jq")," is a lightweight command-line JSON\nprocessor."))),(0,a.kt)("h3",{id:"install-golang"},"Install Golang"),(0,a.kt)("p",null,"Celestia-app and celestia-node are written in ",(0,a.kt)("a",{parentName:"p",href:"https://go.dev"},"Golang"),"\nso we must install Golang to build and run them."),(0,a.kt)(o.Z,{groupId:"network",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,a.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"amd",label:"Ubuntu (AMD)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'ver="',r.Z.golang,'" ',(0,a.kt)("br",null),"cd $HOME ",(0,a.kt)("br",null),'wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" ',(0,a.kt)("br",null),"sudo rm -rf /usr/local/go ",(0,a.kt)("br",null),'sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" ',(0,a.kt)("br",null),'rm "go$ver.linux-amd64.tar.gz" ',(0,a.kt)("br",null)))),(0,a.kt)(u.Z,{value:"arm",label:"Ubuntu (ARM)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'ver="',r.Z.golang,'" ',(0,a.kt)("br",null),"cd $HOME ",(0,a.kt)("br",null),'wget "https://golang.org/dl/go$ver.linux-arm64.tar.gz" ',(0,a.kt)("br",null),"sudo rm -rf /usr/local/go ",(0,a.kt)("br",null),'sudo tar -C /usr/local -xzf "go$ver.linux-arm64.tar.gz" ',(0,a.kt)("br",null),'rm "go$ver.linux-arm64.tar.gz" ',(0,a.kt)("br",null)))),(0,a.kt)(u.Z,{value:"apple",label:"Mac (Apple)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'ver="',r.Z.golang,'" ',(0,a.kt)("br",null),"cd $HOME ",(0,a.kt)("br",null),'wget "https://golang.org/dl/go$ver.darwin-arm64.tar.gz" ',(0,a.kt)("br",null),"sudo rm -rf /usr/local/go ",(0,a.kt)("br",null),'sudo tar -C /usr/local -xzf "go$ver.darwin-arm64.tar.gz" ',(0,a.kt)("br",null),'rm "go$ver.darwin-arm64.tar.gz" ',(0,a.kt)("br",null)))),(0,a.kt)(u.Z,{value:"mac",label:"Mac (Intel)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'ver="',r.Z.golang,'" ',(0,a.kt)("br",null),"cd $HOME ",(0,a.kt)("br",null),'wget "https://golang.org/dl/go$ver.darwin-amd64.tar.gz" ',(0,a.kt)("br",null),"sudo rm -rf /usr/local/go ",(0,a.kt)("br",null),'sudo tar -C /usr/local -xzf "go$ver.darwin-amd64.tar.gz" ',(0,a.kt)("br",null),'rm "go$ver.darwin-amd64.tar.gz" ',(0,a.kt)("br",null))))),(0,a.kt)("p",null,"Now we need to add the ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/local/go/bin")," directory to ",(0,a.kt)("inlineCode",{parentName:"p"},"$PATH"),":"),(0,a.kt)(o.Z,{groupId:"shell",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"bash",label:"bash",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n'))),(0,a.kt)(u.Z,{value:"zsh",label:"zsh",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-zsh"},'echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.zshrc\nsource $HOME/.zshrc\n')))),(0,a.kt)("p",null,"To check if Go was installed correctly run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"go version\n")),(0,a.kt)("p",null,"The output should be the version installed:"),(0,a.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"amd",label:"Ubuntu (AMD)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"go version go",r.Z.golang," linux/amd64"))),(0,a.kt)(u.Z,{value:"arm",label:"Ubuntu (ARM)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"go version go",r.Z.golang," linux/arm64"))),(0,a.kt)(u.Z,{value:"apple",label:"Mac (Apple)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"go version go",r.Z.golang," darwin/arm64"))),(0,a.kt)(u.Z,{value:"mac",label:"Mac (Intel)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"go version go",r.Z.golang," darwin/amd64"))))),(0,a.kt)(u.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,a.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"amd",label:"Ubuntu (AMD)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'ver="',r.Z.golang,'" ',(0,a.kt)("br",null),"cd $HOME ",(0,a.kt)("br",null),'wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz" ',(0,a.kt)("br",null),"sudo rm -rf /usr/local/go ",(0,a.kt)("br",null),'sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz" ',(0,a.kt)("br",null),'rm "go$ver.linux-amd64.tar.gz" ',(0,a.kt)("br",null)))),(0,a.kt)(u.Z,{value:"arm",label:"Ubuntu (ARM)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'ver="',r.Z.golang,'" ',(0,a.kt)("br",null),"cd $HOME ",(0,a.kt)("br",null),'wget "https://golang.org/dl/go$ver.linux-arm64.tar.gz" ',(0,a.kt)("br",null),"sudo rm -rf /usr/local/go ",(0,a.kt)("br",null),'sudo tar -C /usr/local -xzf "go$ver.linux-arm64.tar.gz" ',(0,a.kt)("br",null),'rm "go$ver.linux-arm64.tar.gz" ',(0,a.kt)("br",null)))),(0,a.kt)(u.Z,{value:"apple",label:"Mac (Apple)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'ver="',r.Z.golang,'" ',(0,a.kt)("br",null),"cd $HOME ",(0,a.kt)("br",null),'wget "https://golang.org/dl/go$ver.darwin-arm64.tar.gz" ',(0,a.kt)("br",null),"sudo rm -rf /usr/local/go ",(0,a.kt)("br",null),'sudo tar -C /usr/local -xzf "go$ver.darwin-arm64.tar.gz" ',(0,a.kt)("br",null),'rm "go$ver.darwin-arm64.tar.gz" ',(0,a.kt)("br",null)))),(0,a.kt)(u.Z,{value:"mac",label:"Mac (Intel)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,'ver="',r.Z.golang,'" ',(0,a.kt)("br",null),"cd $HOME ",(0,a.kt)("br",null),'wget "https://golang.org/dl/go$ver.darwin-amd64.tar.gz" ',(0,a.kt)("br",null),"sudo rm -rf /usr/local/go ",(0,a.kt)("br",null),'sudo tar -C /usr/local -xzf "go$ver.darwin-amd64.tar.gz" ',(0,a.kt)("br",null),'rm "go$ver.darwin-amd64.tar.gz" ',(0,a.kt)("br",null))))),(0,a.kt)("p",null,"Now we need to add the ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/local/go/bin")," directory to ",(0,a.kt)("inlineCode",{parentName:"p"},"$PATH"),":"),(0,a.kt)(o.Z,{groupId:"shell",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"bash",label:"bash",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n'))),(0,a.kt)(u.Z,{value:"zsh",label:"zsh",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-zsh"},'echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.zshrc\nsource $HOME/.zshrc\n')))),(0,a.kt)("p",null,"To check if Go was installed correctly run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"go version\n")),(0,a.kt)("p",null,"The output should be the version installed:"),(0,a.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"amd",label:"Ubuntu (AMD)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"go version go",r.Z.golang," linux/amd64"))),(0,a.kt)(u.Z,{value:"arm",label:"Ubuntu (ARM)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"go version go",r.Z.golang," linux/arm64"))),(0,a.kt)(u.Z,{value:"apple",label:"Mac (Apple)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"go version go",r.Z.golang," darwin/arm64"))),(0,a.kt)(u.Z,{value:"mac",label:"Mac (Intel)",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",null,"go version go",r.Z.golang," darwin/amd64")))))))}b.isMDXComponent=!0}}]);