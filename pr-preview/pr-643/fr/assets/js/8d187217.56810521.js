"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[6129],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var A=a.createContext({}),l=function(e){var t=a.useContext(A),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(A.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,A=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(n),u=o,m=p["".concat(A,".").concat(u)]||p[u]||d[u]||s;return n?a.createElement(m,r(r({ref:t},c),{},{components:n})):a.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=u;var i={};for(var A in t)hasOwnProperty.call(t,A)&&(i[A]=t[A]);i.originalType=e,i[p]="string"==typeof e?e:o,r[1]=i;for(var l=2;l<s;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),o=n(6010);const s={tabItem:"tabItem_Ymn6"};function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(s.tabItem,r),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(7462),o=n(7294),s=n(6010),r=n(2466),i=n(6550),A=n(1980),l=n(7392),c=n(12);function p(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function d(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function u(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,A._X)(s),(0,o.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=d(e),[r,i]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[A,l]=m({queryString:n,groupId:a}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),g=(()=>{const e=A??p;return u({value:e,tabValues:s})?e:null})();(0,o.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!u({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),l(e),h(e)}),[l,h,s]),tabValues:s}}var g=n(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:i,selectValue:A,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,r.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=l[n].value;a!==i&&(p(t),A(a))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:u,onClick:d},r,{className:(0,s.Z)("tabs__item",k.tabItem,r?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function x(e){const t=h(e);return o.createElement("div",{className:(0,s.Z)("tabs-container",k.tabList)},o.createElement(b,(0,a.Z)({},e,t)),o.createElement(y,(0,a.Z)({},e,t)))}function f(e){const t=(0,g.Z)();return o.createElement(x,(0,a.Z)({key:String(t)},e))}},464:(e,t,n)=>{n.d(t,{Z:()=>a});const a=Object.freeze({"app-latest-tag":"v0.12.0","app-latest-sha":"1943735bdefc751ae98732760921d49a3534a70a","core-latest-tag":"v1.15.0-tm-v0.34.23","core-latest-sha":"77a1de71feadebaa89c5ecaef0309fd8b9f2f921","node-latest-tag":"v0.7.1","node-latest-sha":"c958fd3b3921ca993489d88530e59fe7f337bf4d"})},8842:(e,t,n)=>{n.d(t,{Z:()=>a});const a=Object.freeze({"app-latest-tag":"v0.12.2","app-latest-sha":"9698a07837c2cc1986f3f59c4cb51459da9c29e5","core-latest-tag":"v1.17.0-tm-v0.34.27","core-latest-sha":"e3bad3d08ce3372fb7473b9e13be00cdaaa4fa91","node-latest-tag":"v0.8.2","node-latest-sha":"8e36597a82f3b6574669d57160844078b8bdb82d"})},578:(e,t,n)=>{n.d(t,{Z:()=>a});const a=Object.freeze({golangNode:"1.19.1",golangApp:"1.19.1",golangCore:"1.19.1",golang:"1.19.1",arabicaChainId:"arabica-6",rollkitVersion:"v0.7.3"})},8549:(e,t,n)=>{n.d(t,{Z:()=>a});const a=Object.freeze({"app-latest-tag":"v0.11.1","app-latest-sha":"a1eb594d43137ded5f9c1062168d26139a251e16","core-latest-tag":"v1.14.0-tm-v0.34.23","core-latest-sha":"ab4ef71b202dd9d27c879a820fa06e127d4234fa","node-latest-tag":"v0.6.4","node-latest-sha":"747c9e593542dfb32a933c731a9cd74b1fab897f"})},9407:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>A,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905)),s=(n(578),n(464),n(8549),n(8842),n(4866)),r=n(5162);const i={sidebar_label:"Gateway API tutorial"},A="Getting and sending transactions with Celestia Node's Gateway API",l={unversionedId:"developers/node-tutorial",id:"developers/node-tutorial",title:"Getting and sending transactions with Celestia Node's Gateway API",description:"In this tutorial, we will cover how to use the Celestia Node Gateway API to submit and",source:"@site/docs/developers/node-tutorial.mdx",sourceDirName:"developers",slug:"/developers/node-tutorial",permalink:"/pr-preview/pr-643/fr/developers/node-tutorial",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/node-tutorial.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Gateway API tutorial"},sidebar:"developers",previous:{title:"Gateway API",permalink:"/pr-preview/pr-643/fr/category/gateway-api"},next:{title:"Gateway API docs",permalink:"/pr-preview/pr-643/fr/developers/node-gateway-docs"}},c={},p=[{value:"Hardware requirements",id:"hardware-requirements",level:2},{value:"Setting up dependencies",id:"setting-up-dependencies",level:2},{value:"Celestia node",id:"celestia-node",level:2},{value:"Install Celestia Node",id:"install-celestia-node",level:3},{value:"Instantiate a Celestia light node",id:"instantiate-a-celestia-light-node",level:3},{value:"Connect to a public core endpoint",id:"connect-to-a-public-core-endpoint",level:3},{value:"Connect to a public core endpoint",id:"connect-to-a-public-core-endpoint-1",level:3},{value:"Connect to a public core endpoint",id:"connect-to-a-public-core-endpoint-2",level:3},{value:"Keys and wallets",id:"keys-and-wallets",level:3},{value:"Node API calls",id:"node-api-calls",level:2},{value:"Balance",id:"balance",level:3},{value:"Get block header",id:"get-block-header",level:3},{value:"Submit a PFB transaction",id:"submit-a-pfb-transaction",level:3},{value:"Troubleshooting",id:"troubleshooting",level:4},{value:"Get namespaced shares by block height",id:"get-namespaced-shares-by-block-height",level:3},{value:"Submit a PFD transaction",id:"submit-a-pfd-transaction",level:3},{value:"Troubleshooting",id:"troubleshooting-1",level:4},{value:"Get namespaced shares by block height",id:"get-namespaced-shares-by-block-height-1",level:3},{value:"Submit a PFB transaction",id:"submit-a-pfb-transaction-1",level:3},{value:"Troubleshooting",id:"troubleshooting-2",level:4},{value:"Get namespaced shares by block height",id:"get-namespaced-shares-by-block-height-2",level:3}],d={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-and-sending-transactions-with-celestia-nodes-gateway-api"},"Getting and sending transactions with Celestia Node's Gateway API"),(0,o.kt)("p",null,"In this tutorial, we will cover how to use the Celestia Node Gateway API to submit and\nretrieve messages from the Data Availability Layer by their namespace ID."),(0,o.kt)("p",null,"This tutorial assumes you are working in a Linux environment."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"To view a video tutorial for setting up a Celestia Light Node, click ",(0,o.kt)("a",{parentName:"p",href:"/pr-preview/pr-643/fr/developers/light-node-video"},"here"),".")),(0,o.kt)("h2",{id:"hardware-requirements"},"Hardware requirements"),(0,o.kt)("p",null,"The minimum hardware requirements for running a light node\ncan be found ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/light-node#hardware-requirements"},"here"),"."),(0,o.kt)("h2",{id:"setting-up-dependencies"},"Setting up dependencies"),(0,o.kt)("p",null,"First, you will need to ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/environment/"},"install your dependencies")," if you have not already."),(0,o.kt)("h2",{id:"celestia-node"},"Celestia node"),(0,o.kt)("h3",{id:"install-celestia-node"},"Install Celestia Node"),(0,o.kt)("p",null,"You can follow the tutorial for installing ",(0,o.kt)("inlineCode",{parentName:"p"},"celestia-node")," ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node"},"here"),"."),(0,o.kt)("h3",{id:"instantiate-a-celestia-light-node"},"Instantiate a Celestia light node"),(0,o.kt)("p",null,"Now, let's instantiate a Celestia Light node:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: RPC Endpoints are exposed in all ",(0,o.kt)("inlineCode",{parentName:"p"},"celestia-node")," types\nsuch as Light, Bridge and Full Nodes.")),(0,o.kt)(s.Z,{groupId:"network",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"blockspacerace",label:"Blockspace Race",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light init --p2p.network blockspacerace\n"))),(0,o.kt)(r.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light init\n"))),(0,o.kt)(r.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light init --p2p.network arabica\n")))),(0,o.kt)(s.Z,{groupId:"network",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"blockspacerace",label:"Blockspace Race",mdxType:"TabItem"},(0,o.kt)("h3",{id:"connect-to-a-public-core-endpoint"},"Connect to a public core endpoint"),(0,o.kt)("p",null,"Let's now run the Celestia Light node with a GRPC connection to\nan example public core endpoint."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: You are also encouraged to find a community-run API endpoint\nand there are several in the Discord. This one is used for demonstration\npurposes. You can find a list of RPC endpoints ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/blockspace-race"},"here"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip <ip-address> --gateway --gateway.addr <ip-address> --gateway.port <port> --p2p.network blockspacerace\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--core.ip")," gRPC port defaults to 9090,\nso if you do not specify it in the command\nline, it will default to that port. You can\nadd the port after the IP address or use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"--core.grpc.port")," flag to specify another\nport if you prefer."),(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine."))),(0,o.kt)(r.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,o.kt)("h3",{id:"connect-to-a-public-core-endpoint-1"},"Connect to a public core endpoint"),(0,o.kt)("p",null,"Let's now run the Celestia Light node with a GRPC connection to\nan example public core endpoint."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: You are also encouraged to find a community-run API endpoint\nand there are several in the Discord. This one is used for demonstration\npurposes. You can find a list of RPC endpoints ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/mocha-testnet#rpc-endpoints"},"here"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip <ip-address> --gateway --gateway.addr <ip-address> --gateway.port <port> --p2p.network mocha\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--core.ip")," gRPC port defaults to 9090,\nso if you do not specify it in the command\nline, it will default to that port. You can\nadd the port after the IP address or use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"--core.grpc.port")," flag to specify another\nport if you prefer."),(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine."))),(0,o.kt)(r.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,o.kt)("h3",{id:"connect-to-a-public-core-endpoint-2"},"Connect to a public core endpoint"),(0,o.kt)("p",null,"Let's now run the Celestia Light node with a GRPC connection to\nan example public core endpoint."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: You are also encouraged to find a community-run API endpoint\nand there are several in the Discord. This one is used for demonstration\npurposes. You can find a list of RPC endpoints ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/arabica-devnet#rpc-endpoints"},"here"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip <ip-address> --gateway --gateway.addr <ip-address> --gateway.port <port> --p2p.network arabica\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"--core.ip")," gRPC port defaults to 9090,\nso if you do not specify it in the command\nline, it will default to that port. You can\nadd the port after the IP address or use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"--core.grpc.port")," flag to specify another\nport if you prefer."),(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine.")))),(0,o.kt)("p",null,"For example, your command along with an RPC endpoint might look like this:"),(0,o.kt)(s.Z,{groupId:"network",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"blockspacerace",label:"Blockspace Race",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip <ip-address> --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network blockspacerace\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine."))),(0,o.kt)(r.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip https://rpc-mocha.pops.one --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network mocha\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine."))),(0,o.kt)(r.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip https://limani.celestia-devops.dev --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network arabica\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine.")))),(0,o.kt)("h3",{id:"keys-and-wallets"},"Keys and wallets"),(0,o.kt)("p",null,"You can create your key for your node by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"./cel-key add <key_name> --keyring-backend test --node.type light --p2p.network <network>\n")),(0,o.kt)("p",null,"You can start your light node with the key created above by running the\nfollowing command:"),(0,o.kt)(s.Z,{groupId:"network",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"blockspacerace",label:"Blockspace Race",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip <ip-address> --keyring.accname <key_name> --gateway --gateway.addr <ip-address> --gateway.port <port> --p2p.network blockspacerace\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine."))),(0,o.kt)(r.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip <ip-address> --keyring.accname <key_name> --gateway --gateway.addr <ip-address> --gateway.port <port> --p2p.network mocha\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine."))),(0,o.kt)(r.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"celestia light start --core.ip <ip-address> --keyring.accname <key_name> --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network arabica\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"../../nodes/celestia-node/#ports"},"ports")," section for information on\nwhich ports are required to be open on your machine.")))),(0,o.kt)("p",null,"Once you start the Light Node, a wallet key will be generated for you.\nYou will need to fund that address with Mocha Testnet or Arabica Devnet\ntokens to pay for ",(0,o.kt)("inlineCode",{parentName:"p"},"PayForData")," transactions or ",(0,o.kt)("inlineCode",{parentName:"p"},"PayForBlob transactions"),", respectively."),(0,o.kt)("p",null,"You can find the address by running the following command in\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"celestia-node")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"./cel-key list --node.type light --keyring-backend test --p2p.network <network>\n")),(0,o.kt)("p",null,"If you would like to fund your wallet with testnet tokens, head over\nto either the ",(0,o.kt)("inlineCode",{parentName:"p"},"#mocha-faucet")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"#arabica-faucet")," channels on the\nCelestia ",(0,o.kt)("a",{parentName:"p",href:"https://discord.gg/celestiacommunity"},"Discord"),"."),(0,o.kt)("p",null,"You can request funds to your wallet address using the following command in Discord:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$request <Wallet-Address>\n")),(0,o.kt)("p",null,"Where ",(0,o.kt)("inlineCode",{parentName:"p"},"<Wallet-Address>")," is the ",(0,o.kt)("inlineCode",{parentName:"p"},"celestia1******")," address generated\nwhen you created the wallet."),(0,o.kt)("p",null,"With your wallet funded, you can move on to the next step."),(0,o.kt)("h2",{id:"node-api-calls"},"Node API calls"),(0,o.kt)("p",null,"Open up another terminal window in order to begin querying the API.\n",(0,o.kt)("inlineCode",{parentName:"p"},"celestia-node")," exposes its REST gateway on port ",(0,o.kt)("inlineCode",{parentName:"p"},"26659")," by default."),(0,o.kt)("admonition",{title:"Deprecation Notice",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"This endpoint will soon be deprecated in favor of RPC equivalent. Learn more about the RPC ",(0,o.kt)("a",{parentName:"p",href:"https://node-rpc-docs.celestia.org/"},"here"),".")),(0,o.kt)("h3",{id:"balance"},"Balance"),(0,o.kt)("p",null,"Now, let's query our node for the balance of its default account\n(which is the account associated with the ",(0,o.kt)("inlineCode",{parentName:"p"},"developer")," key we generated earlier):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"curl -X GET http://127.0.0.1:26659/balance\n")),(0,o.kt)("p",null,"It will output the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "denom":"utia",\n   "amount":"999995000000000"\n}\n')),(0,o.kt)("p",null,"This shows you the balance in that wallet."),(0,o.kt)("h3",{id:"get-block-header"},"Get block header"),(0,o.kt)("p",null,"Now, let's get the block header information."),(0,o.kt)("p",null,"Here we will get the header from Block 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"curl -X GET http://127.0.0.1:26659/header/1\n")),(0,o.kt)("p",null,"It will output something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "header":{\n      "version":{\n         "block":11\n      },\n      "chain_id":"devnet-2",\n      "height":1,\n      "time":"2021-11-23T02:24:05.965728875Z",\n      "last_block_id":{\n         "hash":"",\n         "parts":{\n            "total":0,\n            "hash":""\n         }\n      },\n      "last_commit_hash":"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",\n      "data_hash":"7B578B351B1B0BBD70BB350019EBC964C44A140A37EF715B552A7F8F315ACD19",\n      "validators_hash":"7F4EA93A134DEDBDA6A1FDD30D05760DD98A2B5FBA95DB3EFFFE7FCE4B361855",\n      "next_validators_hash":"7F4EA93A134DEDBDA6A1FDD30D05760DD98A2B5FBA95DB3EFFFE7FCE4B361855",\n      "consensus_hash":"048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F",\n      "app_hash":"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",\n      "last_results_hash":"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",\n      "evidence_hash":"E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855",\n      "proposer_address":"04881EB0A0A4C1DB414C708249CEEC2FCF348F3E"\n   },\n   "commit":{\n      "height":1,\n      "round":1,\n      "block_id":{\n         "hash":"4632277C441CA6155C4374AC56048CF4CFE3CBB2476E07A548644435980D5E17",\n         "parts":{\n            "total":1,\n            "hash":"BE1B789969938DB061B7723BE45C8A7B4B27192339A8E0A4E216775B2CB58D97"\n         }\n      },\n      "signatures":[\n         {\n            "block_id_flag":2,\n            "validator_address":"03F1044A6DF782189C7061FF89146B3D33608F17",\n            "timestamp":"2021-11-23T11:53:56.123958759Z",\n            "signature":"q/XF7Nc2ThcQgWfqi6LYOUEqLcU+sgVPY1nB2CLWdjRo80WwI6xy6QaYx1B0lmcKAkWR0YMxbc7vJzKF70qwBA=="\n         },\n         {\n            "block_id_flag":2,\n            "validator_address":"04881EB0A0A4C1DB414C708249CEEC2FCF348F3E",\n            "timestamp":"2021-11-23T11:53:56.036027188Z",\n            "signature":"0bbxeviCvgLlyIF47JoY1CMN2e/MhHtFzhdgV0zCM+P3qeO/rkh+0TSxoRVUB1MDvMCoA8hyffCw3amxympMAA=="\n         },\n         {\n            "block_id_flag":2,\n            "validator_address":"31711F367349D1BD619BD0A39568A69614B8A048",\n            "timestamp":"2021-11-23T11:53:56.135943844Z",\n            "signature":"gT23rZ8+XcG5rQ9QS+uh+Wn5eAiJDVy8bh23Fb8hevnHsuO1er2892MXAohaLRF6TTWs/C6dItYph4B/k3b6DQ=="\n         },\n         {\n            "block_id_flag":2,\n            "validator_address":"5A253EC2A9AB20AFD48C7BED2AFCA53F5C80BCA6",\n            "timestamp":"2021-11-23T11:53:56.081698742Z",\n            "signature":"nMngIlJ7PPPtu0N20YwKhWt/H3/JrEKJC3rnS5KG/8J3IppTacuwjGDUqIuHpRlrD0MmWa1mlY+6+ulbytt2AA=="\n         },\n         {\n            "block_id_flag":2,\n            "validator_address":"79BEB39F4B396F9278DA03F1C97F9BE3B10B12D3",\n            "timestamp":"2021-11-23T11:53:56.037896319Z",\n            "signature":"wPAL/sK4YXSU7iRXl00GDLvi4IItVlkY2zRkxIUeV9VA3Tq8Tke6wGE0N6pXKmtMcKUMoyjm03RWHv4mrtj1BA=="\n         },\n         {\n            "block_id_flag":1,\n            "validator_address":"",\n            "timestamp":"0001-01-01T00:00:00Z",\n            "signature":null\n         },\n         {\n            "block_id_flag":1,\n            "validator_address":"",\n            "timestamp":"0001-01-01T00:00:00Z",\n            "signature":null\n         },\n         {\n            "block_id_flag":2,\n            "validator_address":"D345D62BBD18C301B843DF7C65F10E57AB17BD98",\n            "timestamp":"2021-11-23T11:53:56.123499237Z",\n            "signature":"puj5Epw3yPGjSsJk6aQI74S2prgL7+cuiEpCxXYzQxOi0kNIqh8UMZLYf+AVHDQNJXehSmrAK6+VsIt9NF0DDg=="\n         },\n         {\n            "block_id_flag":2,\n            "validator_address":"DEC2642E786A941511A401090D21621E7F08A36D",\n            "timestamp":"2021-11-23T11:53:56.123136439Z",\n            "signature":"J/lnFqARXj42Lfx5MGY0FO/wug+AyQRxTnQp1u1HyczvV+0hXXuk06Uosi61jQKgJG6JBJF2VidqA41/uKMEDw=="\n         }\n      ]\n   },\n   "validator_set":{\n      "validators":[\n         {\n            "address":"03F1044A6DF782189C7061FF89146B3D33608F17",\n            "pub_key":"sMcFgSIzlD77eZYgV7H4akyxoHCPc2oIQW05qWEB6b4=",\n            "voting_power":5000,\n            "proposer_priority":-40000\n         },\n         {\n            "address":"04881EB0A0A4C1DB414C708249CEEC2FCF348F3E",\n            "pub_key":"WdqZ8hoyc1HxZCJfQrAGKm2fFJZFg7PngPNGkA1RWXc=",\n            "voting_power":5000,\n            "proposer_priority":5000\n         },\n         {\n            "address":"31711F367349D1BD619BD0A39568A69614B8A048",\n            "pub_key":"pvwSRksq3ekXIiYK7IzjQJ870BxLqEma8zRr9n9VnXI=",\n            "voting_power":5000,\n            "proposer_priority":5000\n         },\n         {\n            "address":"5A253EC2A9AB20AFD48C7BED2AFCA53F5C80BCA6",\n            "pub_key":"RnmnTlKoKxNoh2TpohBDP3cKlx4ATiPOCvQFk/6xpUU=",\n            "voting_power":5000,\n            "proposer_priority":5000\n         },\n         {\n            "address":"79BEB39F4B396F9278DA03F1C97F9BE3B10B12D3",\n            "pub_key":"oh/N+GOIennBOAa/gPNCso1mDlqaHQNn7Op/X8opbeY=",\n            "voting_power":5000,\n            "proposer_priority":5000\n         },\n         {\n            "address":"7F1105B7B219481810C49730AECB1A83036BCA3A",\n            "pub_key":"Ow/AHP/Q3guPGymUKpvhnwae+QoCOpGztpVnP179IG8=",\n            "voting_power":5000,\n            "proposer_priority":5000\n         },\n         {\n            "address":"87265CC17922E01497F40B701EC9F05373B83467",\n            "pub_key":"MNi0Z+uNF5X1Bxj988IDXVl0BKUcLs7LItoMnX6dbg4=",\n            "voting_power":5000,\n            "proposer_priority":5000\n         },\n         {\n            "address":"D345D62BBD18C301B843DF7C65F10E57AB17BD98",\n            "pub_key":"4g3hhdyU4IIgWW/4sR0nax8bsC/M/fDbt1N8s/QanF8=",\n            "voting_power":5000,\n            "proposer_priority":5000\n         },\n         {\n            "address":"DEC2642E786A941511A401090D21621E7F08A36D",\n            "pub_key":"b+Vv6Lcp0bhIjOQncr+OYBHixCvU5+k34y4RqyvpluE=",\n            "voting_power":5000,\n            "proposer_priority":5000\n         }\n      ],\n      "proposer":{\n         "address":"03F1044A6DF782189C7061FF89146B3D33608F17",\n         "pub_key":"sMcFgSIzlD77eZYgV7H4akyxoHCPc2oIQW05qWEB6b4=",\n         "voting_power":5000,\n         "proposer_priority":-40000\n      }\n   },\n   "dah":{\n      "row_roots":[\n         "//////////7//////////uyLCVMJmAItYqbOqgHXm3OwHsq1xQiAX1kZV2Tgcobm",\n         "/////////////////////ykyWNfDJZfigziZC5BN5L00KKuoyDPduwynDywauskL"\n      ],\n      "column_roots":[\n         "//////////7//////////uyLCVMJmAItYqbOqgHXm3OwHsq1xQiAX1kZV2Tgcobm",\n         "/////////////////////ykyWNfDJZfigziZC5BN5L00KKuoyDPduwynDywauskL"\n      ]\n   }\n}\n')),(0,o.kt)(s.Z,{groupId:"network",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"blockspacerace",label:"Blockspace Race",mdxType:"TabItem"},(0,o.kt)("h3",{id:"submit-a-pfb-transaction"},"Submit a PFB transaction"),(0,o.kt)("p",null,"In this example, we will be submitting a ",(0,o.kt)("inlineCode",{parentName:"p"},"PayForBlob"),"\ntransaction to the node's ",(0,o.kt)("inlineCode",{parentName:"p"},"/submit_pfb")," endpoint."),(0,o.kt)("p",null,"Some things to consider:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"PFB is a ",(0,o.kt)("inlineCode",{parentName:"li"},"PayForBlob")," Message."),(0,o.kt)("li",{parentName:"ul"},"The endpoint also takes in a ",(0,o.kt)("inlineCode",{parentName:"li"},"namespace_id")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"data")," values."),(0,o.kt)("li",{parentName:"ul"},"Namespace ID should be 8 bytes."),(0,o.kt)("li",{parentName:"ul"},"Data is in hex-encoded bytes of the raw message."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"gas_limit")," is the limit of gas to use for the transaction")),(0,o.kt)("p",null,"We use the following ",(0,o.kt)("inlineCode",{parentName:"p"},"namespace_id")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"0000010000000100")," and\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," value of ",(0,o.kt)("inlineCode",{parentName:"p"},"f1f20ca8007e910a3bf8b2e61da0f26bca07ef78717a6ea54165f5"),"."),(0,o.kt)("p",null,"You can generate your own ",(0,o.kt)("inlineCode",{parentName:"p"},"namespace_id")," and data values using this\nuseful Golang Playground we created ",(0,o.kt)("a",{parentName:"p",href:"https://go.dev/play/p/7ltvaj8lhRl"},"here"),"."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When running a Celestia node, you will need to use the following flags\nwhen starting your node to submit a PFB:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"the ",(0,o.kt)("inlineCode",{parentName:"li"},"--core.ip string")," flag, to allow you to submit transactions\nto your node"),(0,o.kt)("li",{parentName:"ul"},"the ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway.addr string"),",\nand ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway.port string"),", to open the gateway\nand allow anyone to use your IP as an endpoint to submit PFBs"))),(0,o.kt)("p",null,"We run the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST -d \'{"namespace_id": "0c204d39600fddd3",\n  "data": "f1f20ca8007e910a3bf8b2e61da0f26bca07ef78717a6ea54165f5",\n  "gas_limit": 80000, "fee": 2000}\' http://localhost:26659/submit_pfb\n')),(0,o.kt)("p",null,"We get the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "height": 4249,\n  "txhash": "B31DEA16E1F3EE13895D4A70FE808801E8BCF8381AACD5071CB51E929F17AB65",\n  "codespace": "undefined",\n  "code": 111222,\n  "raw_log": "recovered: UnmarshalJSON cannot decode empty bytes\\nstack:\\ngoroutine 61 [running]:\\nruntime/debug.Stack()\\n\\t/usr/local/go/src/runtime/debug/stack.go:24 +0x65\\ngithub.com/cosmos/cosmos-sdk/baseapp.newDefaultRecoveryMiddleware.func1({0x1f63960, 0xc00653eef0})\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/recovery.go:71 +0x27\\ngithub.com/cosmos/cosmos-sdk/baseapp.newRecoveryMiddleware.func1({0x1f63960?, 0xc00653eef0?})\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/recovery.go:39 +0x30\\ngithub.com/cosmos/cosmos-sdk/baseapp.processRecovery({0x1f63960, 0xc00653eef0}, 0xc0091f4580?)\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/recovery.go:28 +0x37\\ngithub.com/cosmos/cosmos-sdk/baseapp.processRecovery({0x1f63960, 0xc00653eef0}, 0x2d32158?)\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/recovery.go:33 +0x5e\\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runTx.func1()\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/baseapp.go:639 +0xf0\\npanic({0x1f63960, 0xc00653eef0})\\n\\t/usr/local/go/src/runtime/panic.go:838 +0x207\\ngithub.com/cosmos/cosmos-sdk/x/params/types.Subspace.Get({{0x2d31748, 0xc001099090}, 0xc0004ee198, {0x2d0e170, 0xc001099730}, {0x2d0e1c0, 0xc001099c10}, {0xc00168aba0, 0x4, 0x12}, ...}, ...)\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/x/params/types/subspace.go:110 +0x307\\ngithub.com/celestiaorg/celestia-app/x/blob/keeper.Keeper.GasPerBlobByte(...)\\n\\t/celestia-app/x/blob/keeper/params.go:36\\ngithub.com/celestiaorg/celestia-app/x/blob/keeper.Keeper.PayForBlobs({{0x2d31748, 0xc001099090}, {0x2d0e170, 0xc001099ac0}, {0x2d0e170, 0x0}, {{0x2d31748, 0xc001099090}, 0xc0004ee198, {0x2d0e170, ...}, ...}}, ...)\\n\\t/celestia-app/x/blob/keeper/keeper.go:60 +0x3a8\\ngithub.com/celestiaorg/celestia-app/x/blob.NewHandler.func1({{0x2d24c58, 0xc000138020}, {0x2d32158, 0xc00acc0680}, {{0xb, 0x0}, {0xc0067752e0, 0x9}, 0x1099, {0x5f89ec0, ...}, ...}, ...}, ...)\\n\\t/celestia-app/x/blob/handler.go:20 +0x195\\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runMsgs(_, {{0x2d24c58, 0xc000138020}, {0x2d32158, 0xc00acc0680}, {{0xb, 0x0}, {0xc0067752e0, 0x9}, 0x1099, ...}, ...}, ...)\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/baseapp.go:800 +0x7a8\\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runTx(0xc000be6e00, 0x3, {0xc0026698c0, 0x143, 0x143})\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/baseapp.go:725 +0xc45\\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).DeliverTx(0xc000be6e00, {{0xc0026698c0?, 0x20?, 0xc00abfe9c0?}})\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/abci.go:283 +0x17a\\ngithub.com/tendermint/tendermint/abci/client.(*localClient).DeliverTxAsync(0xc000cf9320, {{0xc0026698c0?, 0x0?, 0xc000cf9320?}})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/abci/client/local_client.go:93 +0x105\\ngithub.com/tendermint/tendermint/proxy.(*appConnConsensus).DeliverTxAsync(0xc00a464780?, {{0xc0026698c0?, 0x20?, 0xb?}})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/proxy/app_conn.go:88 +0x26\\ngithub.com/tendermint/tendermint/state.execBlockOnProxyApp({0x2d25e10?, 0xc000d69f20}, {0x2d2ffe8, 0xc000dafdd0}, 0xc008a5ba00, {0x2d329b0, 0xc001194120}, 0x1098?)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/state/execution.go:390 +0x822\\ngithub.com/tendermint/tendermint/state.(*BlockExecutor).ApplyBlock(_, {{{0xb, 0x0}, {0xc000c8b080, 0x7}}, {0xc000c8b087, 0x9}, 0x1, 0x1098, {{0xc00a536640, ...}, ...}, ...}, ...)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/state/execution.go:210 +0x171\\ngithub.com/tendermint/tendermint/consensus.(*State).finalizeCommit(0xc0010dc700, 0x1099)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1668 +0xb2d\\ngithub.com/tendermint/tendermint/consensus.(*State).tryFinalizeCommit(0xc0010dc700, 0x1099)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1576 +0x2ff\\ngithub.com/tendermint/tendermint/consensus.(*State).enterCommit.func1()\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1511 +0x87\\ngithub.com/tendermint/tendermint/consensus.(*State).enterCommit(0xc0010dc700, 0x1099, 0x0)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1549 +0xcb7\\ngithub.com/tendermint/tendermint/consensus.(*State).addVote(0xc0010dc700, 0xc008e7b220, {0x0, 0x0})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:2171 +0xb7c\\ngithub.com/tendermint/tendermint/consensus.(*State).tryAddVote(0xc0010dc700, 0xc008e7b220, {0x0?, 0x47b9a6?})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1963 +0x2c\\ngithub.com/tendermint/tendermint/consensus.(*State).handleMsg(0xc0010dc700, {{0x2d06640?, 0xc0011f6c70?}, {0x0?, 0x0?}})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:853 +0x44b\\ngithub.com/tendermint/tendermint/consensus.(*State).receiveRoutine(0xc0010dc700, 0x0)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:780 +0x512\\ncreated by github.com/tendermint/tendermint/consensus.(*State).OnStart\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:379 +0x12d\\n: panic",\n  "logs": null,\n  "gas_wanted": 80000,\n  "gas_used": 62131,\n  "events": [\n    {\n      "type": "coin_spent",\n      "attributes": [\n        {\n          "key": "c3BlbmRlcg==",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODU=",\n          "index": true\n        },\n        {\n          "key": "YW1vdW50",\n          "value": "MjAwMHV0aWE=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "coin_received",\n      "attributes": [\n        {\n          "key": "cmVjZWl2ZXI=",\n          "value": "Y2VsZXN0aWExN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWxwbmpzM3M=",\n          "index": true\n        },\n        {\n          "key": "YW1vdW50",\n          "value": "MjAwMHV0aWE=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "transfer",\n      "attributes": [\n        {\n          "key": "cmVjaXBpZW50",\n          "value": "Y2VsZXN0aWExN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWxwbmpzM3M=",\n          "index": true\n        },\n        {\n          "key": "c2VuZGVy",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODU=",\n          "index": true\n        },\n        {\n          "key": "YW1vdW50",\n          "value": "MjAwMHV0aWE=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "message",\n      "attributes": [\n        {\n          "key": "c2VuZGVy",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODU=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "tx",\n      "attributes": [\n        {\n          "key": "ZmVl",\n          "value": "MjAwMHV0aWE=",\n          "index": true\n        },\n        {\n          "key": "ZmVlX3BheWVy",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODU=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "tx",\n      "attributes": [\n        {\n          "key": "YWNjX3NlcQ==",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODUvMQ==",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "tx",\n      "attributes": [\n        {\n          "key": "c2lnbmF0dXJl",\n          "value": "ZUdtRWhHNUFtYk1uUUE0MjFzdUM3RERqSE9seFBuNC81b3ZlZHB5YUI0RVpQL0RHc3NYTTEzTnUvZEVPTllBWEJ2dDFuSWpqM2JNOHZiMlEwQmhXdHc9PQ==",\n          "index": true\n        }\n      ]\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"If you notice from the above output, it returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," of\n",(0,o.kt)("inlineCode",{parentName:"p"},"4249")," which we will use for the next command."),(0,o.kt)("p",null,"Note: To learn more about status response codes, please navigate to\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/main/types/errors/errors.go"},"cosmos code explanation")),(0,o.kt)("h4",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("p",null,"If you encounter an error like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'"rpc error: code = NotFound desc = account celestia1krkle0n547u0znz3unnln8paft2dq4z3rznv86 not found"\n')),(0,o.kt)("p",null,"It is possible that the account you are trying to submit a ",(0,o.kt)("inlineCode",{parentName:"p"},"PayForBlob")," from\ndoesn't have testnet tokens yet. Ensure the testnet faucet has funded your\naccount with tokens and then try again."),(0,o.kt)("h3",{id:"get-namespaced-shares-by-block-height"},"Get namespaced shares by block height"),(0,o.kt)("p",null,"After submitting your PFB transaction, upon success, the node will return\nthe block height for which the PFB transaction was included. You can then\nuse that block height and the namespace ID with which you submitted your\nPFB transaction to get your message ",(0,o.kt)("a",{parentName:"p",href:"../node-gateway-docs#share-endpoints"},"shares")," returned to you. In this example,\nthe block height we got was 2452 which we will use for the following command.\nRead more about shares in the ",(0,o.kt)("a",{parentName:"p",href:"https://node-rpc-docs.celestia.org/#share"},"Celestia Specs"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"curl -X GET \\\n  http://localhost:26659/namespaced_shares/0c204d39600fddd3/height/4249\n")),(0,o.kt)("p",null,"Will generate the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "shares": [\n    "DCBNOWAP3dMBAAAAG/HyDKgAfpEKO/iy5h2g8mvKB+94cXpupUFln  ],\n  "height": 4249\n}\n')),(0,o.kt)("p",null,"The output here is base64-encoded.")),(0,o.kt)(r.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,o.kt)("h3",{id:"submit-a-pfd-transaction"},"Submit a PFD transaction"),(0,o.kt)("p",null,"In this example, we will be submitting a ",(0,o.kt)("inlineCode",{parentName:"p"},"PayForData"),"\ntransaction to the node's ",(0,o.kt)("inlineCode",{parentName:"p"},"/submit_pfd")," endpoint."),(0,o.kt)("p",null,"Some things to consider:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"PFD is a ",(0,o.kt)("inlineCode",{parentName:"li"},"PayForData")," Message."),(0,o.kt)("li",{parentName:"ul"},"The endpoint also takes in a ",(0,o.kt)("inlineCode",{parentName:"li"},"namespace_id")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"data")," values."),(0,o.kt)("li",{parentName:"ul"},"Namespace ID should be 8 bytes."),(0,o.kt)("li",{parentName:"ul"},"Data is in hex-encoded bytes of the raw message."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"gas_limit")," is the limit of gas to use for the transaction")),(0,o.kt)("p",null,"We use the following ",(0,o.kt)("inlineCode",{parentName:"p"},"namespace_id")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"0000010000000100")," and\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," value of ",(0,o.kt)("inlineCode",{parentName:"p"},"f1f20ca8007e910a3bf8b2e61da0f26bca07ef78717a6ea54165f5"),"."),(0,o.kt)("p",null,"You can generate your own ",(0,o.kt)("inlineCode",{parentName:"p"},"namespace_id")," and data values using this\nuseful Golang Playground we created ",(0,o.kt)("a",{parentName:"p",href:"https://go.dev/play/p/7ltvaj8lhRl"},"here"),"."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When running a Celestia node, you will need to use the following flags\nwhen starting your node to submit a PFD:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"the ",(0,o.kt)("inlineCode",{parentName:"li"},"--core.ip string")," flag, to allow you to submit transactions\nto your node"),(0,o.kt)("li",{parentName:"ul"},"the ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway.addr string"),",\nand ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway.port string"),", to open the gateway\nand allow anyone to use your IP as an endpoint to submit PFDs"))),(0,o.kt)("p",null,"We run the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST -d \'{"namespace_id": "0c204d39600fddd3",\n  "data": "f1f20ca8007e910a3bf8b2e61da0f26bca07ef78717a6ea54165f5",\n  "gas_limit": 80000, "fee": 2000}\' http://localhost:26659/submit_pfd\n')),(0,o.kt)("p",null,"We get the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "height":2452,\n   "txhash":"04A79AF9DA62FDB41ACD7D82EB0B9004AE4E4ED603B280A65816560B4F38A999",\n   "data":"12200A1E2F7061796D656E742E4D7367506179466F7244617461526573706F6E7365",\n   "raw_log":"[{\\"msg_index\\":0,\\"events\\":[{\\"type\\":\\"message\\",\\"attributes\\":[{\\"key\\":\\"action\\",\\"value\\":\\"/payment.MsgPayForData\\"}]},{\\"type\\":\\"payfordata\\",\\"attributes\\":[{\\"key\\":\\"signer\\",\\"value\\":\\"celestia1vdjkcetnw35kzvtgxvmxwmnwwaaxuet4xp3hxut6dce8wctsdq6hjwfcxd5xvvmyddsh5mnvvaaq6776xw\\"},{\\"key\\":\\"size\\",\\"value\\":\\"27\\"}]}]}]",\n   "logs":[\n      {\n         "msg_index":0,\n         "events":[\n            {\n               "type":"message",\n               "attributes":[\n                  {\n                     "key":"action",\n                     "value":"/payment.MsgPayForData"\n                  }\n               ]\n            },\n            {\n               "type":"payfordata",\n               "attributes":[\n                  {\n                     "key":"signer",\n                     "value":"celestia1vdjkcetnw35kzvtgxvmxwmnwwaaxuet4xp3hxut6dce8wctsdq6hjwfcxd5xvvmyddsh5mnvvaaq6776xw"\n                  },\n                  {\n                     "key":"size",\n                     "value":"27"\n                  }\n               ]\n            }\n         ]\n      }\n   ],\n   "events":[\n      {\n         "type":"coin_spent",\n         "attributes":[\n            {\n               "key":"spender",\n               "value":"celestia10jhckjxxymsufflglvypxscnmggetwh0gfasws",\n               "index":true\n            },\n            {\n               "key":"amount",\n               "value":"1utia",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"coin_received",\n         "attributes":[\n            {\n               "key":"receiver",\n               "value":"celestia17xpfvakm2amg962yls6f84z3kell8c5lpnjs3s",\n               "index":true\n            },\n            {\n               "key":"amount",\n               "value":"1utia",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"transfer",\n         "attributes":[\n            {\n               "key":"recipient",\n               "value":"celestia17xpfvakm2amg962yls6f84z3kell8c5lpnjs3s",\n               "index":true\n            },\n            {\n               "key":"sender",\n               "value":"celestia10jhckjxxymsufflglvypxscnmggetwh0gfasws",\n               "index":true\n            },\n            {\n               "key":"amount",\n               "value":"1utia",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"message",\n         "attributes":[\n            {\n               "key":"sender",\n               "value":"celestia10jhckjxxymsufflglvypxscnmggetwh0gfasws",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"fee",\n               "value":"1utia",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"acc_seq",\n               "value":"celestia10jhckjxxymsufflglvypxscnmggetwh0gfasws/267",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"signature",\n               "value":"JMNihnKS/MtYJDprqEFGJuXh16tVADsDDxXaFFpvv2te57btl4LbiRzwRRiN2rvwkJ2zlAApu2ImT22MZBi5+A==",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"fee",\n               "value":"",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"acc_seq",\n               "value":"celestia13zx48t96zauht0kpcn0kcfykc9wn8fehzcp9wq/1024",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"signature",\n               "value":"mIZIjbzN0/RQAlQN7TDWzqtey3vVBPe7IO3+IIDhJstIH8QU9vsHfl0Rql9qWMZQG4dM+77w9WmUcnCeS7edfw==",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"fee",\n               "value":"",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"acc_seq",\n               "value":"celestia1h36gnnwzneu0csqzn2waph5y983hf3dkaznlgz/0",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"tx",\n         "attributes":[\n            {\n               "key":"signature",\n               "value":"sfy+XyP7iWU+V9q3zEIOWxbGihvhzUKRLNVeXP+a+5oRefIA/Pyqfm13A5NU9I27hhfvpqo9vhXW1waRgcI9OA==",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"message",\n         "attributes":[\n            {\n               "key":"action",\n               "value":"/payment.MsgPayForData",\n               "index":true\n            }\n         ]\n      },\n      {\n         "type":"payfordata",\n         "attributes":[\n            {\n               "key":"signer",\n               "value":"celestia1vdjkcetnw35kzvtgxvmxwmnwwaaxuet4xp3hxut6dce8wctsdq6hjwfcxd5xvvmyddsh5mnvvaaq6776xw",\n               "index":true\n            },\n            {\n               "key":"size",\n               "value":"27",\n               "index":true\n            }\n         ]\n      }\n   ]\n}\n')),(0,o.kt)("p",null,"If you notice from the above output, it returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," of\n",(0,o.kt)("inlineCode",{parentName:"p"},"2452")," which we will use for the next command."),(0,o.kt)("p",null,"Note: To learn more about status response codes, please navigate to\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/main/types/errors/errors.go"},"cosmos code explanation")),(0,o.kt)("h4",{id:"troubleshooting-1"},"Troubleshooting"),(0,o.kt)("p",null,"If you encounter an error like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'"rpc error: code = NotFound desc = account celestia1krkle0n547u0znz3unnln8paft2dq4z3rznv86 not found"\n')),(0,o.kt)("p",null,"It is possible that the account you are trying to submit a ",(0,o.kt)("inlineCode",{parentName:"p"},"PayForData")," from\ndoesn't have testnet tokens yet. Ensure the testnet faucet has funded your\naccount with tokens and then try again."),(0,o.kt)("h3",{id:"get-namespaced-shares-by-block-height-1"},"Get namespaced shares by block height"),(0,o.kt)("p",null,"After submitting your PFD transaction, upon success, the node will return\nthe block height for which the PFD transaction was included. You can then\nuse that block height and the namespace ID with which you submitted your\nPFD transaction to get your message ",(0,o.kt)("a",{parentName:"p",href:"../node-gateway-docs#share-endpoints"},"shares")," returned to you. In this example,\nthe block height we got was 2452 which we will use for the following command.\nRead more about shares in the ",(0,o.kt)("a",{parentName:"p",href:"https://celestiaorg.github.io/celestia-specs/latest/specs/data_structures.html?highlight=shares#share"},"Celestia Specs"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"curl -X GET \\\n  http://localhost:26659/namespaced_shares/0c204d39600fddd3/height/2452\n")),(0,o.kt)("p",null,"Will generate the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "shares":[\n      "DCBNOWAP3dMb8fIMqAB+kQo7+LLmHaDya8oH73hxem6lQWX1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=="\n   ],\n   "height":2452\n}\n')),(0,o.kt)("p",null,"The output here is base64-encoded.")),(0,o.kt)(r.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,o.kt)("h3",{id:"submit-a-pfb-transaction-1"},"Submit a PFB transaction"),(0,o.kt)("p",null,"In this example, we will be submitting a ",(0,o.kt)("inlineCode",{parentName:"p"},"PayForBlob"),"\ntransaction to the node's ",(0,o.kt)("inlineCode",{parentName:"p"},"/submit_pfb")," endpoint."),(0,o.kt)("p",null,"Some things to consider:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"PFB is a ",(0,o.kt)("inlineCode",{parentName:"li"},"PayForBlob")," Message."),(0,o.kt)("li",{parentName:"ul"},"The endpoint also takes in a ",(0,o.kt)("inlineCode",{parentName:"li"},"namespace_id")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"data")," values."),(0,o.kt)("li",{parentName:"ul"},"Namespace ID should be 8 bytes."),(0,o.kt)("li",{parentName:"ul"},"Data is in hex-encoded bytes of the raw message."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"gas_limit")," is the limit of gas to use for the transaction")),(0,o.kt)("p",null,"We use the following ",(0,o.kt)("inlineCode",{parentName:"p"},"namespace_id")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"0000010000000100")," and\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," value of ",(0,o.kt)("inlineCode",{parentName:"p"},"f1f20ca8007e910a3bf8b2e61da0f26bca07ef78717a6ea54165f5"),"."),(0,o.kt)("p",null,"You can generate your own ",(0,o.kt)("inlineCode",{parentName:"p"},"namespace_id")," and data values using this\nuseful Golang Playground we created ",(0,o.kt)("a",{parentName:"p",href:"https://go.dev/play/p/7ltvaj8lhRl"},"here"),"."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"When running a Celestia node, you will need to use the following flags\nwhen starting your node to submit a PFB:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"the ",(0,o.kt)("inlineCode",{parentName:"li"},"--core.ip string")," flag, to allow you to submit transactions\nto your node"),(0,o.kt)("li",{parentName:"ul"},"the ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway.addr string"),",\nand ",(0,o.kt)("inlineCode",{parentName:"li"},"--gateway.port string"),", to open the gateway\nand allow anyone to use your IP as an endpoint to submit PFBs"))),(0,o.kt)("p",null,"We run the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST -d \'{"namespace_id": "0c204d39600fddd3",\n  "data": "f1f20ca8007e910a3bf8b2e61da0f26bca07ef78717a6ea54165f5",\n  "gas_limit": 80000, "fee": 2000}\' http://localhost:26659/submit_pfb\n')),(0,o.kt)("p",null,"We get the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "height": 4249,\n  "txhash": "B31DEA16E1F3EE13895D4A70FE808801E8BCF8381AACD5071CB51E929F17AB65",\n  "codespace": "undefined",\n  "code": 111222,\n  "raw_log": "recovered: UnmarshalJSON cannot decode empty bytes\\nstack:\\ngoroutine 61 [running]:\\nruntime/debug.Stack()\\n\\t/usr/local/go/src/runtime/debug/stack.go:24 +0x65\\ngithub.com/cosmos/cosmos-sdk/baseapp.newDefaultRecoveryMiddleware.func1({0x1f63960, 0xc00653eef0})\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/recovery.go:71 +0x27\\ngithub.com/cosmos/cosmos-sdk/baseapp.newRecoveryMiddleware.func1({0x1f63960?, 0xc00653eef0?})\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/recovery.go:39 +0x30\\ngithub.com/cosmos/cosmos-sdk/baseapp.processRecovery({0x1f63960, 0xc00653eef0}, 0xc0091f4580?)\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/recovery.go:28 +0x37\\ngithub.com/cosmos/cosmos-sdk/baseapp.processRecovery({0x1f63960, 0xc00653eef0}, 0x2d32158?)\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/recovery.go:33 +0x5e\\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runTx.func1()\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/baseapp.go:639 +0xf0\\npanic({0x1f63960, 0xc00653eef0})\\n\\t/usr/local/go/src/runtime/panic.go:838 +0x207\\ngithub.com/cosmos/cosmos-sdk/x/params/types.Subspace.Get({{0x2d31748, 0xc001099090}, 0xc0004ee198, {0x2d0e170, 0xc001099730}, {0x2d0e1c0, 0xc001099c10}, {0xc00168aba0, 0x4, 0x12}, ...}, ...)\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/x/params/types/subspace.go:110 +0x307\\ngithub.com/celestiaorg/celestia-app/x/blob/keeper.Keeper.GasPerBlobByte(...)\\n\\t/celestia-app/x/blob/keeper/params.go:36\\ngithub.com/celestiaorg/celestia-app/x/blob/keeper.Keeper.PayForBlobs({{0x2d31748, 0xc001099090}, {0x2d0e170, 0xc001099ac0}, {0x2d0e170, 0x0}, {{0x2d31748, 0xc001099090}, 0xc0004ee198, {0x2d0e170, ...}, ...}}, ...)\\n\\t/celestia-app/x/blob/keeper/keeper.go:60 +0x3a8\\ngithub.com/celestiaorg/celestia-app/x/blob.NewHandler.func1({{0x2d24c58, 0xc000138020}, {0x2d32158, 0xc00acc0680}, {{0xb, 0x0}, {0xc0067752e0, 0x9}, 0x1099, {0x5f89ec0, ...}, ...}, ...}, ...)\\n\\t/celestia-app/x/blob/handler.go:20 +0x195\\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runMsgs(_, {{0x2d24c58, 0xc000138020}, {0x2d32158, 0xc00acc0680}, {{0xb, 0x0}, {0xc0067752e0, 0x9}, 0x1099, ...}, ...}, ...)\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/baseapp.go:800 +0x7a8\\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).runTx(0xc000be6e00, 0x3, {0xc0026698c0, 0x143, 0x143})\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/baseapp.go:725 +0xc45\\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).DeliverTx(0xc000be6e00, {{0xc0026698c0?, 0x20?, 0xc00abfe9c0?}})\\n\\t/go/pkg/mod/github.com/celestiaorg/cosmos-sdk@v1.8.0-sdk-0.46.7/baseapp/abci.go:283 +0x17a\\ngithub.com/tendermint/tendermint/abci/client.(*localClient).DeliverTxAsync(0xc000cf9320, {{0xc0026698c0?, 0x0?, 0xc000cf9320?}})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/abci/client/local_client.go:93 +0x105\\ngithub.com/tendermint/tendermint/proxy.(*appConnConsensus).DeliverTxAsync(0xc00a464780?, {{0xc0026698c0?, 0x20?, 0xb?}})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/proxy/app_conn.go:88 +0x26\\ngithub.com/tendermint/tendermint/state.execBlockOnProxyApp({0x2d25e10?, 0xc000d69f20}, {0x2d2ffe8, 0xc000dafdd0}, 0xc008a5ba00, {0x2d329b0, 0xc001194120}, 0x1098?)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/state/execution.go:390 +0x822\\ngithub.com/tendermint/tendermint/state.(*BlockExecutor).ApplyBlock(_, {{{0xb, 0x0}, {0xc000c8b080, 0x7}}, {0xc000c8b087, 0x9}, 0x1, 0x1098, {{0xc00a536640, ...}, ...}, ...}, ...)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/state/execution.go:210 +0x171\\ngithub.com/tendermint/tendermint/consensus.(*State).finalizeCommit(0xc0010dc700, 0x1099)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1668 +0xb2d\\ngithub.com/tendermint/tendermint/consensus.(*State).tryFinalizeCommit(0xc0010dc700, 0x1099)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1576 +0x2ff\\ngithub.com/tendermint/tendermint/consensus.(*State).enterCommit.func1()\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1511 +0x87\\ngithub.com/tendermint/tendermint/consensus.(*State).enterCommit(0xc0010dc700, 0x1099, 0x0)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1549 +0xcb7\\ngithub.com/tendermint/tendermint/consensus.(*State).addVote(0xc0010dc700, 0xc008e7b220, {0x0, 0x0})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:2171 +0xb7c\\ngithub.com/tendermint/tendermint/consensus.(*State).tryAddVote(0xc0010dc700, 0xc008e7b220, {0x0?, 0x47b9a6?})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:1963 +0x2c\\ngithub.com/tendermint/tendermint/consensus.(*State).handleMsg(0xc0010dc700, {{0x2d06640?, 0xc0011f6c70?}, {0x0?, 0x0?}})\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:853 +0x44b\\ngithub.com/tendermint/tendermint/consensus.(*State).receiveRoutine(0xc0010dc700, 0x0)\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:780 +0x512\\ncreated by github.com/tendermint/tendermint/consensus.(*State).OnStart\\n\\t/go/pkg/mod/github.com/celestiaorg/celestia-core@v1.14.0-tm-v0.34.23/consensus/state.go:379 +0x12d\\n: panic",\n  "logs": null,\n  "gas_wanted": 80000,\n  "gas_used": 62131,\n  "events": [\n    {\n      "type": "coin_spent",\n      "attributes": [\n        {\n          "key": "c3BlbmRlcg==",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODU=",\n          "index": true\n        },\n        {\n          "key": "YW1vdW50",\n          "value": "MjAwMHV0aWE=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "coin_received",\n      "attributes": [\n        {\n          "key": "cmVjZWl2ZXI=",\n          "value": "Y2VsZXN0aWExN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWxwbmpzM3M=",\n          "index": true\n        },\n        {\n          "key": "YW1vdW50",\n          "value": "MjAwMHV0aWE=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "transfer",\n      "attributes": [\n        {\n          "key": "cmVjaXBpZW50",\n          "value": "Y2VsZXN0aWExN3hwZnZha20yYW1nOTYyeWxzNmY4NHoza2VsbDhjNWxwbmpzM3M=",\n          "index": true\n        },\n        {\n          "key": "c2VuZGVy",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODU=",\n          "index": true\n        },\n        {\n          "key": "YW1vdW50",\n          "value": "MjAwMHV0aWE=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "message",\n      "attributes": [\n        {\n          "key": "c2VuZGVy",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODU=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "tx",\n      "attributes": [\n        {\n          "key": "ZmVl",\n          "value": "MjAwMHV0aWE=",\n          "index": true\n        },\n        {\n          "key": "ZmVlX3BheWVy",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODU=",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "tx",\n      "attributes": [\n        {\n          "key": "YWNjX3NlcQ==",\n          "value": "Y2VsZXN0aWExOG1lbHFkNmV0eXZ5aDZ3M3BkMDZkODRleXA5cHU1c2xuN2h5ODUvMQ==",\n          "index": true\n        }\n      ]\n    },\n    {\n      "type": "tx",\n      "attributes": [\n        {\n          "key": "c2lnbmF0dXJl",\n          "value": "ZUdtRWhHNUFtYk1uUUE0MjFzdUM3RERqSE9seFBuNC81b3ZlZHB5YUI0RVpQL0RHc3NYTTEzTnUvZEVPTllBWEJ2dDFuSWpqM2JNOHZiMlEwQmhXdHc9PQ==",\n          "index": true\n        }\n      ]\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"If you notice from the above output, it returns a ",(0,o.kt)("inlineCode",{parentName:"p"},"height")," of\n",(0,o.kt)("inlineCode",{parentName:"p"},"4249")," which we will use for the next command."),(0,o.kt)("p",null,"Note: To learn more about status response codes, please navigate to\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/main/types/errors/errors.go"},"cosmos code explanation")),(0,o.kt)("h4",{id:"troubleshooting-2"},"Troubleshooting"),(0,o.kt)("p",null,"If you encounter an error like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'"rpc error: code = NotFound desc = account celestia1krkle0n547u0znz3unnln8paft2dq4z3rznv86 not found"\n')),(0,o.kt)("p",null,"It is possible that the account you are trying to submit a ",(0,o.kt)("inlineCode",{parentName:"p"},"PayForBlob")," from\ndoesn't have testnet tokens yet. Ensure the testnet faucet has funded your\naccount with tokens and then try again."),(0,o.kt)("h3",{id:"get-namespaced-shares-by-block-height-2"},"Get namespaced shares by block height"),(0,o.kt)("p",null,"After submitting your PFB transaction, upon success, the node will return\nthe block height for which the PFB transaction was included. You can then\nuse that block height and the namespace ID with which you submitted your\nPFB transaction to get your message ",(0,o.kt)("a",{parentName:"p",href:"../node-gateway-docs#share-endpoints"},"shares")," returned to you. In this example,\nthe block height we got was 2452 which we will use for the following command.\nRead more about shares in the ",(0,o.kt)("a",{parentName:"p",href:"https://node-rpc-docs.celestia.org/#share"},"Celestia Specs"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"curl -X GET \\\n  http://localhost:26659/namespaced_shares/0c204d39600fddd3/height/4249\n")),(0,o.kt)("p",null,"Will generate the following output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "shares": [\n    "DCBNOWAP3dMBAAAAG/HyDKgAfpEKO/iy5h2g8mvKB+94cXpupUFln  ],\n  "height": 4249\n}\n')),(0,o.kt)("p",null,"The output here is base64-encoded."))))}m.isMDXComponent=!0}}]);