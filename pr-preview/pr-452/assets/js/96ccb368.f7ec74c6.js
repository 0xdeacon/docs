"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[429],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=l,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return t?a.createElement(k,r(r({ref:n},u),{},{components:t})):a.createElement(k,r({ref:n},u))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,r=new Array(o);r[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2472:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return r},default:function(){return p},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return c}});var a=t(3117),l=(t(7294),t(3905));const o={sidebar_label:"Local Devnet"},r="Running a Local Celestia Devnet",i={unversionedId:"nodes/local-devnet",id:"nodes/local-devnet",title:"Running a Local Celestia Devnet",description:"This tutorial has only been tested on an AMD machine running Ubuntu 22.10 x64.",source:"@site/docs/nodes/local-devnet.md",sourceDirName:"nodes",slug:"/nodes/local-devnet",permalink:"/pr-preview/pr-452/nodes/local-devnet",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/nodes/local-devnet.md",tags:[],version:"current",frontMatter:{sidebar_label:"Local Devnet"},sidebar:"nodes",previous:{title:"Participate in the Celestia Testnets",permalink:"/pr-preview/pr-452/nodes/participate"},next:{title:"Arabica Devnet",permalink:"/pr-preview/pr-452/nodes/arabica-devnet"}},s={},c=[{value:"Install Docker",id:"install-docker",level:2},{value:"Run the Local Devnet",id:"run-the-local-devnet",level:2},{value:"Running Local Devnet with a Rollkit Rollup",id:"running-local-devnet-with-a-rollkit-rollup",level:2},{value:"Query your balance",id:"query-your-balance",level:3},{value:"Start, stop, or remove your container",id:"start-stop-or-remove-your-container",level:3},{value:"Scaffold your rollup",id:"scaffold-your-rollup",level:3},{value:"Install Rollkit",id:"install-rollkit",level:3},{value:"Start your rollup",id:"start-your-rollup",level:3},{value:"Keys",id:"keys",level:4},{value:"Transactions",id:"transactions",level:4},{value:"Balances",id:"balances",level:4}],u={toc:c};function p(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"running-a-local-celestia-devnet"},"Running a Local Celestia Devnet"),(0,l.kt)("admonition",{title:"Note",type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"This tutorial has only been tested on an AMD machine running Ubuntu 22.10 x64.")),(0,l.kt)("h2",{id:"install-docker"},"Install Docker"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository"},"Install Docker")," (",(0,l.kt)("em",{parentName:"p"},"Ubuntu version"),")"),(0,l.kt)("h2",{id:"run-the-local-devnet"},"Run the Local Devnet"),(0,l.kt)("p",null,"Run the ",(0,l.kt)("inlineCode",{parentName:"p"},"local-celestia-devnet")," by running the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 26657:26657 -p 26659:26659 ghcr.io/celestiaorg/local-celestia-devnet:main\n")),(0,l.kt)("p",null,"If you'd like to name your container with a custom name, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"--name")," option when first running the ",(0,l.kt)("inlineCode",{parentName:"p"},"docker run")," command, for example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name custom_name -p 26657:26657 -p 26659:26659 ghcr.io/celestiaorg/local-celestia-devnet:main\n")),(0,l.kt)("p",null,"Nice! You have a local Celestia devnet running now."),(0,l.kt)("h2",{id:"running-local-devnet-with-a-rollkit-rollup"},"Running Local Devnet with a Rollkit Rollup"),(0,l.kt)("p",null,"First, run the ",(0,l.kt)("inlineCode",{parentName:"p"},"local-celestia-devnet")," by running the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 26650:26657 -p 26659:26659 ghcr.io/celestiaorg/local-celestia-devnet:main\n")),(0,l.kt)("admonition",{title:"Note",type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"The above command is different than the command in the ",(0,l.kt)("a",{parentName:"p",href:"#run-the-local-devnet"},"Run the Local Devnet")," section.\nPort 26657 on the Docker image will be mapped to the local port 26650. This is to avoid clashing ports with\nthe Rollkit node, as we're running the devnet and node on one machine.")),(0,l.kt)("h3",{id:"query-your-balance"},"Query your balance"),(0,l.kt)("p",null,"Open a new terminal instance. Check the balance on your account that you'll be using to post blocks to the\nlocal network, this will make sure you can post rollup blocks to your Celestia Devnet for DA & consensus:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://0.0.0.0:26659/balance\n")),(0,l.kt)("p",null,"You will see something like this, denoting your balance in TIA x 10^(-6):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{"denom":"utia","amount":"999995000000000"}\n')),(0,l.kt)("p",null,"If you want to be able to transpose your JSON results into a nicer format, you can install ",(0,l.kt)("a",{parentName:"p",href:"https://stedolan.github.io/jq/"},(0,l.kt)("inlineCode",{parentName:"a"},"jq")),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install jq\n")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"We'll need ",(0,l.kt)("inlineCode",{parentName:"p"},"jq")," later, so install it!")),(0,l.kt)("p",null,"Then run this to display in a prettier format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://0.0.0.0:26659/balance | jq\n")),(0,l.kt)("p",null,"Here's what my response was when I wrote this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100    43  100    43    0     0   1730      0 --:--:-- --:--:-- --:--:--  1791\n{\n  "denom": "utia",\n  "amount": "999995000000000"\n}\n')),(0,l.kt)("p",null,"If you want to clean it up some more, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"-s")," option to run ",(0,l.kt)("inlineCode",{parentName:"p"},"curl")," in silent mode and not print the progress metrics:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -s -X GET http://0.0.0.0:26659/balance | jq\n")),(0,l.kt)("p",null,"Your result will now look like this, nice \ud83e\udee1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "denom": "utia",\n  "amount": "999995000000000"\n}\n')),(0,l.kt)("h3",{id:"start-stop-or-remove-your-container"},"Start, stop, or remove your container"),(0,l.kt)("p",null,"Find the Container ID that is running by using the command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps\n")),(0,l.kt)("p",null,"Then stop the container:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop CONTAINER_ID_or_NAME\n")),(0,l.kt)("p",null,"You can obtain the container ID or name of a stopped container using the ",(0,l.kt)("inlineCode",{parentName:"p"},"docker ps -a")," command, which will list all containers (running and stopped) and their details. For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,l.kt)("p",null,"This will give you an output similar to this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'CONTAINER ID   IMAGE                                            COMMAND            CREATED         STATUS         PORTS                                                                                                                         NAMES\nd9af68de54e4   ghcr.io/celestiaorg/local-celestia-devnet:main   "/entrypoint.sh"   5 minutes ago   Up 2 minutes   1317/tcp, 9090/tcp, 0.0.0.0:26657->26657/tcp, :::26657->26657/tcp, 26656/tcp, 0.0.0.0:26659->26659/tcp, :::26659->26659/tcp   musing_matsumoto\n')),(0,l.kt)("p",null,"In this example, you can restart the container using either its container ID (",(0,l.kt)("inlineCode",{parentName:"p"},"d9af68de54e4"),") or name (",(0,l.kt)("inlineCode",{parentName:"p"},"musing_matsumoto"),"). To restart the container, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker start d9af68de54e4\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker start musing_matsumoto\n")),(0,l.kt)("p",null,"If you ever would like to remove the container, you can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"docker rm")," command followed by the container ID or name."),(0,l.kt)("p",null,"Here is an example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm CONTAINER_ID_or_NAME\n")),(0,l.kt)("h3",{id:"scaffold-your-rollup"},"Scaffold your rollup"),(0,l.kt)("p",null,"Now that you have a Celestia devnet running, you are ready to install Golang. We will use Golang to build and run our Cosmos-SDK blockchain."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.celestia.org/nodes/environment#install-golang"},"Install Golang")," (",(0,l.kt)("em",{parentName:"p"},"these commands are for amd64/linux"),"):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'ver="1.19.1"\ncd $HOME\nwget "https://golang.org/dl/go$ver.linux-amd64.tar.gz"\nsudo rm -rf /usr/local/go\nsudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz"\nrm "go$ver.linux-amd64.tar.gz"\necho "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\ngo version\n')),(0,l.kt)("p",null,"Now, use the following command to install Ignite CLI:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://get.ignite.com/cli! | bash\n")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"If you have issues with installation, the full guide can be found ",(0,l.kt)("a",{parentName:"p",href:"https://get.ignite.com/cli"},"here")," or on ",(0,l.kt)("a",{parentName:"p",href:"https://docs.ignite.com"},"docs.ignite.com"),".\nThe above command was tested on ",(0,l.kt)("inlineCode",{parentName:"p"},"amd64/linux"),".")),(0,l.kt)("p",null,"Check your version:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ignite version\n")),(0,l.kt)("p",null,"Scaffold the chain:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ignite scaffold chain gm\n")),(0,l.kt)("p",null,"Change into the ",(0,l.kt)("inlineCode",{parentName:"p"},"gm")," directory:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd gm\n")),(0,l.kt)("h3",{id:"install-rollkit"},"Install ",(0,l.kt)("a",{parentName:"h3",href:"https://rollkit.dev/docs/tutorials/gm-world/#installing-rollkit"},"Rollkit")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"go mod edit -replace github.com/cosmos/cosmos-sdk=github.com/rollkit/cosmos-sdk@v0.46.7-rollkit-v0.6.0-no-fraud-proofs\ngo mod edit -replace github.com/tendermint/tendermint=github.com/celestiaorg/tendermint@v0.34.22-0.20221202214355-3605c597500d\ngo mod tidy\ngo mod download\n")),(0,l.kt)("h3",{id:"start-your-rollup"},"Start your rollup"),(0,l.kt)("p",null,"Download the ",(0,l.kt)("inlineCode",{parentName:"p"},"init.sh")," script to start the chain:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# From inside the `gm` directory\ncd ..\ngit clone https://github.com/celestiaorg/devrel-tools\ncp devrel-tools/gm/init-local.sh gm/\ncd gm/\n")),(0,l.kt)("p",null,"Run the ",(0,l.kt)("inlineCode",{parentName:"p"},"init-local.sh")," script:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"bash init-local.sh\n")),(0,l.kt)("p",null,"This will start your rollup, connected to the local Celestia devnet you have running."),(0,l.kt)("p",null,"Now let's explore a bit."),(0,l.kt)("h4",{id:"keys"},"Keys"),(0,l.kt)("p",null,"List your keys:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gmd keys list --keyring-backend test\n")),(0,l.kt)("h4",{id:"transactions"},"Transactions"),(0,l.kt)("p",null,"Send a transaction:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gmd tx bank send cosmos1xwpz06l484xlew98hu74g77wahwatelmz7xm6g cosmos1pgljtq3a549t70zc0fhl4kze2q3r2tllzt8x0y 42069stake --keyring-backend test\n")),(0,l.kt)("p",null,"You'll be prompted to accept the transaction:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'auth_info:\n  fee:\n    amount: []\n    gas_limit: "200000"\n    granter: ""\n    payer: ""\n  signer_infos: []\n  tip: null\nbody:\n  extension_options: []\n  memo: ""\n  messages:\n  - \'@type\': /cosmos.bank.v1beta1.MsgSend\n    amount:\n    - amount: "42069"\n      denom: stake\n    from_address: cosmos1xwpz06l484xlew98hu74g77wahwatelmz7xm6g\n    to_address: cosmos1pgljtq3a549t70zc0fhl4kze2q3r2tllzt8x0y\n  non_critical_extension_options: []\n  timeout_height: "0"\nsignatures: []\nconfirm transaction before signing and broadcasting [y/N]:\n')),(0,l.kt)("p",null,"Type ",(0,l.kt)("inlineCode",{parentName:"p"},"y")," if you'd like to confirm and sign the transaction. Then, you'll see the confirmation:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'code: 0\ncodespace: ""\ndata: ""\nevents: []\ngas_used: "0"\ngas_wanted: "0"\nheight: "0"\ninfo: ""\nlogs: []\nraw_log: \'[]\'\ntimestamp: ""\ntx: null\ntxhash: 677CAF6C80B85ACEF6F9EC7906FB3CB021322AAC78B015FA07D5112F2F824BFF\n')),(0,l.kt)("h4",{id:"balances"},"Balances"),(0,l.kt)("p",null,"Then, query your balance:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gmd query bank balances cosmos1pgljtq3a549t70zc0fhl4kze2q3r2tllzt8x0y\n")),(0,l.kt)("p",null,"This is the key that received the balance, so it should have increased past the initial ",(0,l.kt)("inlineCode",{parentName:"p"},"STAKING_AMOUNT"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'balances:\n- amount: "10000000000000000000042069"\n  denom: stake\npagination:\n  next_key: null\n  total: "0"\n')),(0,l.kt)("p",null,"The other key, should have decreased in balance:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gmd query bank balances cosmos1xwpz06l484xlew98hu74g77wahwatelmz7xm6g\n")),(0,l.kt)("p",null,"Response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'balances:\n- amount: "9999999999999999999957931"\n  denom: stake\npagination:\n  next_key: null\n  total: "0"\n')))}p.isMDXComponent=!0}}]);