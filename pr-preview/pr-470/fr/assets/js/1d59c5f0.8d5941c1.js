"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[9615],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return h}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),c=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=c(a),h=r,f=p["".concat(u,".").concat(h)]||p[h]||d[h]||o;return a?n.createElement(f,l(l({ref:t},s),{},{components:a})):n.createElement(f,l({ref:t},s))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:function(e,t,a){a.d(t,{Z:function(){return l}});var n=a(7294),r=a(4334),o="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:a},t)}},4866:function(e,t,a){a.d(t,{Z:function(){return N}});var n=a(3117),r=a(7294),o=a(4334),l=a(2466),i=a(6775),u=a(1980),c=a(7392),s=a(12);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,u._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=p(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[u,c]=f({queryString:a,groupId:n}),[d,m]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,s.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),g=(()=>{const e=u??d;return h({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),m(e)}),[c,m,o]),tabValues:o}}var g=a(2389),b="tabList__CuJ",k="tabItem_LNqP";function v(e){let{className:t,block:a,selectedValue:i,selectValue:u,tabValues:c}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,a=s.indexOf(t),n=c[a].value;n!==i&&(d(t),u(n))},h=e=>{var t;let a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;a=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;a=s[t]??s[s.length-1];break}}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>s.push(e),onKeyDown:h,onClick:p},l,{className:(0,o.Z)("tabs__item",k,null==l?void 0:l.className,{"tabs__item--active":i===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=m(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",b)},r.createElement(v,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function N(e){const t=(0,g.Z)();return r.createElement(w,(0,n.Z)({key:String(t)},e))}},464:function(e,t){const a=Object.freeze({"app-latest-tag":"v0.12.7-rc7","app-latest-sha":"67c90ede03d2543ce9b02726dfe17cf5aad1f20a","core-latest-tag":"v1.14.0-tm-v0.34.23","core-latest-sha":"ab4ef71b202dd9d27c879a820fa06e127d4234fa","node-latest-tag":"v0.7.0-rc4","node-latest-sha":"8b9937fa04b9702bfb4f4b5604f05aa254713644"});t.Z=a},8549:function(e,t){const a=Object.freeze({"app-latest-tag":"v0.11.1","app-latest-sha":"a1eb594d43137ded5f9c1062168d26139a251e16","core-latest-tag":"v1.14.0-tm-v0.34.23","core-latest-sha":"ab4ef71b202dd9d27c879a820fa06e127d4234fa","node-latest-tag":"v0.6.4","node-latest-sha":"747c9e593542dfb32a933c731a9cd74b1fab897f"});t.Z=a},1846:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return h}});var n=a(3117),r=(a(7294),a(3905)),o=a(8549),l=a(464),i=a(4866),u=a(5162);const c={sidebar_label:"Docker Images"},s="\ud83d\udc33 Docker Setup",d={unversionedId:"nodes/docker-images",id:"nodes/docker-images",title:"\ud83d\udc33 Docker Setup",description:"This page has instructions to run celestia-node using Docker. If you are",source:"@site/docs/nodes/docker-images.mdx",sourceDirName:"nodes",slug:"/nodes/docker-images",permalink:"/pr-preview/pr-470/fr/nodes/docker-images",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/nodes/docker-images.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Docker Images"},sidebar:"nodes",previous:{title:"Installing Celestia Node",permalink:"/pr-preview/pr-470/fr/nodes/celestia-node"},next:{title:"Installing Celestia App",permalink:"/pr-preview/pr-470/fr/nodes/celestia-app"}},p={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Light Node Setup",id:"light-node-setup",level:2},{value:"Mocha Testnet Setup",id:"mocha-testnet-setup",level:3},{value:"Arabica Devnet Setup",id:"arabica-devnet-setup",level:3},{value:"Bridge Node Setup",id:"bridge-node-setup",level:2},{value:"Mocha Bridge Node Setup",id:"mocha-bridge-node-setup",level:3},{value:"Arabica Bridge Node Setup",id:"arabica-bridge-node-setup",level:3},{value:"Full Node Setup",id:"full-node-setup",level:2},{value:"Mocha Full Node Setup",id:"mocha-full-node-setup",level:3},{value:"Arabica Full Node Setup",id:"arabica-full-node-setup",level:3}],f={toc:h};function m(e){let{components:t,...c}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,c,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-docker-setup"},"\ud83d\udc33 Docker Setup"),(0,r.kt)("p",null,"This page has instructions to run ",(0,r.kt)("inlineCode",{parentName:"p"},"celestia-node")," using Docker. If you are\nlooking for instructions to run ",(0,r.kt)("inlineCode",{parentName:"p"},"celestia-node")," using a binary, please\nrefer to the ",(0,r.kt)("a",{parentName:"p",href:"/pr-preview/pr-470/fr/nodes/celestia-node"},"Celestia Node")," page."),(0,r.kt)("p",null,"Using Docker is the easiest way to run ",(0,r.kt)("inlineCode",{parentName:"p"},"celestia-node")," for most\nusers. Docker is a containerization platform that allows you to run ",(0,r.kt)("inlineCode",{parentName:"p"},"celestia-node"),"\nin an isolated environment."),(0,r.kt)("p",null,"This means that you can run ",(0,r.kt)("inlineCode",{parentName:"p"},"celestia-node")," on your machine without having\nto worry about installing and configuring all of the dependencies required\nto run the node."),(0,r.kt)("p",null,"The easiest way to install Docker is to use the Docker Desktop installer or\nUbuntu. You can find the instructions for your operating system\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install"},"here"),"."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker"},"Docker")," and basic understanding of Docker")),(0,r.kt)(i.Z,{groupID:"node",mdxType:"Tabs"},(0,r.kt)(u.Z,{value:"light",label:"Light",mdxType:"TabItem"},(0,r.kt)("h2",{id:"light-node-setup"},"Light Node Setup"),(0,r.kt)(i.Z,{groupId:"network",mdxType:"Tabs"},(0,r.kt)(u.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,r.kt)("h3",{id:"mocha-testnet-setup"},"Mocha Testnet Setup"),(0,r.kt)("p",null,"Run the image from the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",null,"docker run -e NODE_TYPE=light -e P2P_NETWORK=mocha ghcr.io/celestiaorg/celestia-node:sha-",o.Z["node-latest-sha"].slice(0,7)," celestia light start --core.ip https://rpc-mocha.pops.one --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network mocha")),(0,r.kt)("p",null,"Congratulations! You now have a Celestia Light Node running on the Mocha testnet."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"mocha_light_docker",src:a(3609).Z,width:"1984",height:"1218"})),(0,r.kt)("p",null,"If you would like to run the node with custom flags,\nyou can refer to the\n",(0,r.kt)("a",{parentName:"p",href:"../../developers/node-tutorial#connect-to-a-public-core-endpoint"},(0,r.kt)("inlineCode",{parentName:"a"},"celestia-node")," tutorial")," page.")),(0,r.kt)(u.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,r.kt)("h3",{id:"arabica-devnet-setup"},"Arabica Devnet Setup"),(0,r.kt)("p",null,"Run the image from the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",null,"docker run -e NODE_TYPE=light -e P2P_NETWORK=arabica ghcr.io/celestiaorg/celestia-node:",l.Z["node-latest-tag"].slice(1)," celestia light start --core.ip https://limani.celestia-devops.dev --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network arabica")),(0,r.kt)("p",null,"Congratulations! You now have a Celestia Light Node running on the Arabica devnet."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"arabica_light_docker",src:a(8316).Z,width:"1984",height:"1218"})),(0,r.kt)("p",null,"If you would like to run the node with custom flags,\nyou can refer to the\n",(0,r.kt)("a",{parentName:"p",href:"../../developers/node-tutorial#connect-to-a-public-core-endpoint"},(0,r.kt)("inlineCode",{parentName:"a"},"celestia-node")," tutorial")," page.")))),(0,r.kt)(u.Z,{value:"bridge",label:"Bridge",mdxType:"TabItem"},(0,r.kt)("h2",{id:"bridge-node-setup"},"Bridge Node Setup"),(0,r.kt)(i.Z,{groupId:"network",mdxType:"Tabs"},(0,r.kt)(u.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,r.kt)("h3",{id:"mocha-bridge-node-setup"},"Mocha Bridge Node Setup"),(0,r.kt)("p",null,"Run the image from the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",null,"docker run -e NODE_TYPE=bridge -e P2P_NETWORK=mocha ghcr.io/celestiaorg/celestia-node:sha-",o.Z["node-latest-sha"].slice(0,7)," celestia bridge start --core.ip https://rpc-mocha.pops.one --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network mocha")),(0,r.kt)("p",null,"Congratulations! You now have a Celestia Bridge Node running on the Mocha network."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"mocha_bridge_docker",src:a(3234).Z,width:"1984",height:"1218"})),(0,r.kt)("p",null,"If you would like to run the node with custom flags,\nyou can refer to the\n",(0,r.kt)("a",{parentName:"p",href:"../../developers/node-tutorial#connect-to-a-public-core-endpoint"},(0,r.kt)("inlineCode",{parentName:"a"},"celestia-node")," tutorial")," page.")),(0,r.kt)(u.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,r.kt)("h3",{id:"arabica-bridge-node-setup"},"Arabica Bridge Node Setup"),(0,r.kt)("p",null,"Run the image from the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",null,"docker run -e NODE_TYPE=bridge -e P2P_NETWORK=arabica ghcr.io/celestiaorg/celestia-node:",l.Z["node-latest-tag"].slice(1)," celestia bridge start --core.ip https://limani.celestia-devops.dev --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network arabica")),(0,r.kt)("p",null,"Congratulations! You now have a Celestia Bridge Node running on the Arabica network."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"arabica_bridge_docker",src:a(3415).Z,width:"1984",height:"1218"})),(0,r.kt)("p",null,"If you would like to run the node with custom flags,\nyou can refer to the\n",(0,r.kt)("a",{parentName:"p",href:"../../developers/node-tutorial#connect-to-a-public-core-endpoint"},(0,r.kt)("inlineCode",{parentName:"a"},"celestia-node")," tutorial")," page.")))),(0,r.kt)(u.Z,{value:"full",label:"Full",mdxType:"TabItem"},(0,r.kt)("h2",{id:"full-node-setup"},"Full Node Setup"),(0,r.kt)(i.Z,{groupId:"network",mdxType:"Tabs"},(0,r.kt)(u.Z,{value:"mocha",label:"Mocha",mdxType:"TabItem"},(0,r.kt)("h3",{id:"mocha-full-node-setup"},"Mocha Full Node Setup"),(0,r.kt)("p",null,"Run the image from the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",null,"docker run -e NODE_TYPE=full -e P2P_NETWORK=mocha ghcr.io/celestiaorg/celestia-node:sha-",o.Z["node-latest-sha"].slice(0,7)," celestia full start --core.ip https://rpc-mocha.pops.one --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network mocha")),(0,r.kt)("p",null,"Congratulations! You now have a Celestia Full Storage Node running on the Mocha network."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"mocha_full_docker",src:a(8965).Z,width:"1984",height:"1218"})),(0,r.kt)("p",null,"If you would like to run the node with custom flags,\nyou can refer to the\n",(0,r.kt)("a",{parentName:"p",href:"../../developers/node-tutorial#connect-to-a-public-core-endpoint"},(0,r.kt)("inlineCode",{parentName:"a"},"celestia-node")," tutorial")," page.")),(0,r.kt)(u.Z,{value:"arabica",label:"Arabica \ud83c\udfd7\ufe0f",mdxType:"TabItem"},(0,r.kt)("h3",{id:"arabica-full-node-setup"},"Arabica Full Node Setup"),(0,r.kt)("p",null,"Run the image from the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",null,"docker run -e NODE_TYPE=full -e P2P_NETWORK=arabica ghcr.io/celestiaorg/celestia-node:",l.Z["node-latest-tag"].slice(1)," celestia full start --core.ip https://limani.celestia-devops.dev --gateway --gateway.addr 127.0.0.1 --gateway.port 26659 --p2p.network arabica")),(0,r.kt)("p",null,"Congratulations! You now have a Celestia Full Storage Node running on the Arabica network."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"arabica_full_docker",src:a(1169).Z,width:"1984",height:"1218"})),(0,r.kt)("p",null,"If you would like to run the node with custom flags,\nyou can refer to the\n",(0,r.kt)("a",{parentName:"p",href:"../../developers/node-tutorial#connect-to-a-public-core-endpoint"},(0,r.kt)("inlineCode",{parentName:"a"},"celestia-node")," tutorial")," page."))))))}m.isMDXComponent=!0},3415:function(e,t,a){t.Z=a.p+"assets/images/arabica_bridge_docker-47ba2389bb4b625617e77167ff8b7bd0.gif"},1169:function(e,t,a){t.Z=a.p+"assets/images/arabica_full_docker-c748dec2dba3b7d115df73be54ab1a90.gif"},8316:function(e,t,a){t.Z=a.p+"assets/images/arabica_light_docker-7071bf5fb7ab8041c11c7160f651edfe.gif"},3234:function(e,t,a){t.Z=a.p+"assets/images/mocha_bridge_docker-7ec6c8a2acbfdbbf614a00271d3d54b6.gif"},8965:function(e,t,a){t.Z=a.p+"assets/images/mocha_full_docker-9d3884fe7f3e102362715e0100eb079e.gif"},3609:function(e,t,a){t.Z=a.p+"assets/images/mocha_light_docker-47b10985b0784499df40395e28023537.gif"}}]);