"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[785],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4125:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={},s="Mamaki",p={unversionedId:"nodes/mamaki",id:"nodes/mamaki",title:"Mamaki",description:"mamaki-testnet",source:"@site/docs/nodes/mamaki.md",sourceDirName:"nodes",slug:"/nodes/mamaki",permalink:"/nodes/mamaki",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/nodes/mamaki.md",tags:[],version:"current",frontMatter:{},sidebar:"nodes",previous:{title:"Participate",permalink:"/category/participate"},next:{title:"Resources",permalink:"/category/resources"}},c={},u=[{value:"RPC Endpoints",id:"rpc-endpoints",level:2},{value:"Mamaki Testnet Faucet",id:"mamaki-testnet-faucet",level:2},{value:"Explorers",id:"explorers",level:2},{value:"Setup P2P Network",id:"setup-p2p-network",level:2},{value:"Quick-Sync With Snapshot",id:"quick-sync-with-snapshot",level:2},{value:"Delegate to a Validator",id:"delegate-to-a-validator",level:2},{value:"Configure The Bridge Node",id:"configure-the-bridge-node",level:2},{value:"Connect Validator",id:"connect-validator",level:2}],d={toc:u};function m(e){var t=e.components,l=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mamaki"},"Mamaki"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"mamaki-testnet",src:n(7973).Z,width:"6001",height:"3001"})),(0,r.kt)("p",null,"This guide contains the relevant sections for how to connect to Mamaki,\ndepending on the type of node you are running. Mamaki is a milestone\nin Celestia, allowing everyone to test out core functionalities on the\nnetwork. Read the anouncement ",(0,r.kt)("a",{parentName:"p",href:"https://blog.celestia.org/celestia-testnet-introduces-alpha-data-availability-api/"},"here"),"."),(0,r.kt)("p",null,"Your best approach to participating is to first determine which node\nyou would like to run. Each node guides will link to the relevant network\nin order to show you how to connect to them."),(0,r.kt)("p",null,"You have a list of options on the type of nodes you can run in order to\nparticipate in Mamaki:"),(0,r.kt)("p",null,"Consensus:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/nodes/validator-node"},"Validator Node"))),(0,r.kt)("p",null,"Data Availability:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/nodes/bridge-node"},"Bridge Node")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/nodes/full-node"},"Full Node")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/nodes/light-node"},"Light Node"))),(0,r.kt)("p",null,"Select the type of node you would like to run and follow the instructions\non each respective page. Whenever you are asked to select the type of network\nyou want to connect to in those guides, select ",(0,r.kt)("inlineCode",{parentName:"p"},"Mamaki")," in order to refer\nto the correct instructions on this page on how to connect to Mamaki."),(0,r.kt)("h2",{id:"rpc-endpoints"},"RPC Endpoints"),(0,r.kt)("p",null,"There is a list of RPC endpoints you can use to connect to Mamaki Testnet:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://api-mamaki.pops.one/"},"https://api-mamaki.pops.one/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://rpc-1.celestia.nodes.guru/"},"https://rpc-1.celestia.nodes.guru/"))),(0,r.kt)("h2",{id:"mamaki-testnet-faucet"},"Mamaki Testnet Faucet"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"USING THIS FAUCET DOES NOT ENTITLE YOU TO ANY AIRDROP OR OTHER\nDISTRIBUTION OF MAINNET CELESTIA TOKENS. MAINNET CELESTIA TOKENS\nDO NOT CURRENTLY EXIST AND THERE ARE NO PUBLIC SALES OR OTHER PUBLIC\nDISTRIBUTIONS OF ANY MAINNET CELESTIA TOKENS.")),(0,r.kt)("p",null,"You can request from Mamaki Testnet Faucet on the #faucet channel on\nCelestia's Discord server with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"$request <CELESTIA-ADDRESS> \n")),(0,r.kt)("p",null,"Where ",(0,r.kt)("inlineCode",{parentName:"p"},"<CELESTIA-ADDRESS>")," is a ",(0,r.kt)("inlineCode",{parentName:"p"},"celestia1******")," generated address."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: Faucet has a limit of 10 tokens per week per address/Discord ID")),(0,r.kt)("h2",{id:"explorers"},"Explorers"),(0,r.kt)("p",null,"There are several explorers you can use for Mamaki:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://celestia.explorers.guru/"},"https://celestia.explorers.guru/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://celestiascan.vercel.app/"},"https://celestiascan.vercel.app/"))),(0,r.kt)("h2",{id:"setup-p2p-network"},"Setup P2P Network"),(0,r.kt)("p",null,"Now we will setup the P2P Networks by cloning the networks repository:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd $HOME\nrm -rf networks\ngit clone https://github.com/celestiaorg/networks.git\n")),(0,r.kt)("p",null,'To initialize the network pick a "node-name" that describes your\nnode. The --chain-id parameter we are using here is ',(0,r.kt)("inlineCode",{parentName:"p"},"mamaki"),". Keep in\nmind that this might change if a new testnet is deployed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'celestia-appd init "node-name" --chain-id mamaki\n')),(0,r.kt)("p",null,"Copy the ",(0,r.kt)("inlineCode",{parentName:"p"},"genesis.json")," file. For mamaki we are using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cp $HOME/networks/mamaki/genesis.json $HOME/.celestia-app/config\n")),(0,r.kt)("p",null,"Set seeds and peers:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'BOOTSTRAP_PEERS=curl -sL https://raw.githubusercontent.com/celestiaorg/networks/master/mamaki/bootstrap-peers.txt | tr -d \'\\n\' && echo $BOOTSTRAP_PEERS\nsed -i.bak -e "s/^bootstrap-peers =./bootstrap-peers = "$BOOTSTRAP_PEERS"/" $HOME/.celestia-app/config/config.toml\nPEERS="e4429e99609c8c009969b0eb73c973bff33712f9@141.94.73.39:43656\\\n  09263a4168de6a2aaf7fef86669ddfe4e2d004f6@142.132.209.229:26656,\\\n  13d8abce0ff9565ed223c5e4b9906160816ee8fa@94.62.146.145:36656,\\\n  72b34325513863152269e781d9866d1ec4d6a93a@65.108.194.40:26676,\\\n  322542cec82814d8903de2259b1d4d97026bcb75@51.178.133.224:26666,\\\n  5273f0deefa5f9c2d0a3bbf70840bb44c65d835c@80.190.129.50:49656,\\\n  7145da826bbf64f06aa4ad296b850fd697a211cc@176.57.189.212:26656,\\\n  5a4c337189eed845f3ece17f88da0d94c7eb2f9c@209.126.84.147:26656,\\\n  ec072065bd4c6126a5833c97c8eb2d4382db85be@88.99.249.251:26656,\\\n  cd1524191300d6354d6a322ab0bca1d7c8ddfd01@95.216.223.149:26656,\\\n  2fd76fae32f587eceb266dce19053b20fce4e846@207.154.220.138:26656,\\\n  1d6a3c3d9ffc828b926f95592e15b1b59b5d8175@135.181.56.56:26656,\\\n  fe2025284ad9517ee6e8b027024cf4ae17e320c9@198.244.164.11:26656,\\\n  fcff172744c51684aaefc6fd3433eae275a2f31b@159.203.18.242:26656"\nsed -i.bak -e "s/^seeds *=.*/seeds = \\"$SEEDS\\"/; s/^persistent_peers \\\n    *=.*/persistent_peers = \\"$PEERS\\"/" $HOME/.celestia-app/config/config.toml\n')),(0,r.kt)("p",null,"Note: You can find more peers ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/celestiaorg/networks/blob/master/mamaki/peers.txt"},"here"),"."),(0,r.kt)("p",null,"You can return back to where you left off in the Bridge Node guide ",(0,r.kt)("a",{parentName:"p",href:"/nodes/validator-node#configure-pruning"},"here")),(0,r.kt)("h2",{id:"quick-sync-with-snapshot"},"Quick-Sync With Snapshot"),(0,r.kt)("p",null,"Run the following command to quick-sync from a snapshot for ",(0,r.kt)("inlineCode",{parentName:"p"},"mamaki"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'cd $HOME\nrm -rf ~/.celestia-app/data\nmkdir -p ~/.celestia-app/data\nSNAP_NAME=$(curl -s https://snaps.qubelabs.io/celestia/ | \\\n    egrep -o ">mamaki.*tar" | tr -d ">")\nwget -O - https://snaps.qubelabs.io/celestia/${SNAP_NAME} | tar xf - \\\n    -C ~/.celestia-app/data/\n')),(0,r.kt)("p",null,"You can return back to where you left off in the Bridge Node guide ",(0,r.kt)("a",{parentName:"p",href:"/nodes/validator-node#start-the-celestia-app-with-systemd"},"here")),(0,r.kt)("h2",{id:"delegate-to-a-validator"},"Delegate to a Validator"),(0,r.kt)("p",null,"To delegate tokens to the the ",(0,r.kt)("inlineCode",{parentName:"p"},"celesvaloper")," validator, as an example you can run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"celestia-appd tx staking delegate \\\n    celesvaloper1q3v5cugc8cdpud87u4zwy0a74uxkk6u43cv6hd 1000000celes \\\n    --from=$VALIDATOR_WALLET --chain-id=mamaki\n")),(0,r.kt)("p",null,"If successful, you should see a similar output as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'code: 0\ncodespace: ""\ndata: ""\ngas_used: "0"\ngas_wanted: "0"\nheight: "0"\ninfo: ""\nlogs: []\nraw_log: \'[]\'\ntimestamp: ""\ntx: null\ntxhash: <tx-hash>\n')),(0,r.kt)("p",null,"You can check if the TX hash went through using the block explorer by\ninputting the ",(0,r.kt)("inlineCode",{parentName:"p"},"txhash")," ID that was returned."),(0,r.kt)("p",null,"You can return back to where you left off in the Bridge Node guide ",(0,r.kt)("a",{parentName:"p",href:"/nodes/validator-node#deploy-the-celestia-node"},"here")),(0,r.kt)("h2",{id:"configure-the-bridge-node"},"Configure The Bridge Node"),(0,r.kt)("p",null,"In order for your Celestia Bridge Node to communicate with other Bridge Nodes,\nthen you need to add them as ",(0,r.kt)("inlineCode",{parentName:"p"},"mutual peers")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.toml")," file and allow\nthe peer exchange. Please navigate to\n",(0,r.kt)("inlineCode",{parentName:"p"},"networks/mamaki/celestia-node/mutual_peers.txt")," to find the list of\nmutual peers"),(0,r.kt)("p",null,"For more information on ",(0,r.kt)("inlineCode",{parentName:"p"},"config.toml"),", please navigate to ",(0,r.kt)("a",{parentName:"p",href:"/nodes/config-toml"},"this link")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"nano ~/.celestia-bridge/config.toml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'...\n[P2P]\n  ...\n  #add multiaddresses of other celestia bridge nodes\n  \n  MutualPeers = [\n    "/ip4/46.101.22.123/tcp/2121/p2p/12D3KooWD5wCBJXKQuDjhXFjTFMrZoysGVLtVht5hMoVbSLCbV22",\n    "/ip4/x.x.x.x/tcp/yyy/p2p/abc"] \n    # the /ip4/x.x.x.x is only for example.\n    # Don\'t add it! \n  PeerExchange = true #change this line to true. By default it\'s false\n  ...\n...\n')),(0,r.kt)("p",null,"You can return back to where you left off in the Bridge Node guide ",(0,r.kt)("a",{parentName:"p",href:"/nodes/validator-node#start-the-bridge-node-with-systemd"},"here")),(0,r.kt)("h2",{id:"connect-validator"},"Connect Validator"),(0,r.kt)("p",null,"Continuing the Validator tutorial, here are the steps to connect your\nvalidator to Mamaki:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'MONIKER="your_moniker"\nVALIDATOR_WALLET="validator"\n\ncelestia-appd tx staking create-validator \\\n    --amount=1000000celes \\\n    --pubkey=$(celestia-appd tendermint show-validator) \\\n    --moniker=$MONIKER \\\n    --chain-id=mamaki \\\n    --commission-rate=0.1 \\\n    --commission-max-rate=0.2 \\\n    --commission-max-change-rate=0.01 \\\n    --min-self-delegation=1000000 \\\n    --from=$VALIDATOR_WALLET\n')),(0,r.kt)("p",null,"You will be prompted to confirm the transaction:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"confirm transaction before signing and broadcasting [y/N]: y\n")),(0,r.kt)("p",null,"Inputting ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," should provide an output similar to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'code: 0\ncodespace: ""\ndata: ""\ngas_used: "0"\ngas_wanted: "0"\nheight: "0"\ninfo: ""\nlogs: []\nraw_log: \'[]\'\ntimestamp: ""\ntx: null\ntxhash: <tx-hash>\n')),(0,r.kt)("p",null,"You should now be able to see your validator from a block explorer like ",(0,r.kt)("a",{parentName:"p",href:"https://celestia.explorers.guru/"},"here")))}m.isMDXComponent=!0},7973:function(e,t,n){t.Z=n.p+"assets/images/mamaki-a6515baf8b7b3c455c0de99bf8c0cd1c.jpg"}}]);